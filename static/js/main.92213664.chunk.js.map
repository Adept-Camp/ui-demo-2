{"version":3,"sources":["config.js","translations/create-translation.js","translations/translations/en-us.js","translations/translations/es-mx.js","translations/translations/hu.js","translations/index.js","translations/language-code-provider.js","translations/use-translation.js","lib/utils/idb-lru/index.js","lib/sav3-ipfs/utils/webrtc.js","lib/sav3-ipfs/utils/bitswap.js","lib/sav3-ipfs/utils/create-window-sav3-ipfs-test-methods.js","lib/sav3-ipfs/utils/post-replies.js","lib/sav3-ipfs/index.js","components/modal/index.js","hooks/use-user-ipns-data.js","hooks/use-user-profile.js","hooks/use-own-user-cid.js","components/publish-post/modal.js","components/menus/left/index.js","components/menus/bottom/index.js","themes/create-theme.js","themes/index.js","themes/themes/light.js","themes/themes/dark.js","themes/themes/sav3-light.js","themes/theme-provider.js","components/theme-switcher/index.js","components/translation-switcher/index.js","components/top-bar/index.js","translations/use-language-code.js","lib/follow-manager/index.js","hooks/following/following-provider.js","hooks/following/use-is-following.js","components/post/more-menu.js","lib/utils/url.js","hooks/utils/use-interval.js","hooks/use-post-replies-cids.js","hooks/utils/use-copy-clipboard.js","components/post/index.js","components/feeds/posts/index.js","hooks/use-user-posts.js","views/profile/components/description.js","views/profile/components/edit-profile-modal.js","views/profile/components/more-menu.js","views/profile/components/profile.js","views/profile/index.js","hooks/use-own-peer-cid.js","components/menus/drawer/index.js","components/menus/drawer/avatar-button.js","hooks/following/use-following-once.js","lib/utils/local-storage-memoize.js","lib/sav3-ipfs/utils/bootstrap-users.js","hooks/following/use-bootstrap-users-cids.js","hooks/use-users-ipns-data.js","hooks/use-users-profiles.js","hooks/use-users-posts.js","components/publish-post/form.js","hooks/use-users-following.js","views/home/index.js","views/search/index.js","hooks/use-peers-cids.js","views/peers/index.js","lib/utils/ip.js","hooks/use-peers-stats.js","views/stats/components/peer.js","views/stats/index.js","components/feeds/users/user.js","components/feeds/users/index.js","views/following/index.js","hooks/following/use-following.js","views/export/components/form.js","views/export/index.js","hooks/use-posts.js","hooks/use-post-with-replies.js","views/post/index.js","app.js","report-web-vitals.js","index.js","lib/sav3-ipfs/ipns-client/index.js"],"names":["config","bootstrapUsersGoogleSheetId","starServers","ipnsServer","urlTimeToLive","window","createTranslation","_translation","merge","defaultTranslation","translation","Follow","Unfollow","Description","Home","Profile","Search","Peers","Stats","Following","Export","Import","Post","Share","registerTimeAgo","number","index","totalSec","translations","enUs","esMx","hu","Object","freeze","LanguageCodeContext","createContext","languageCode","setLanguageCode","LanguageCodeProvider","props","defaultLanguageCode","preferredLanguageCode","navigator","language","localStorageLanguageCode","localStorage","getItem","console","warn","useState","_setLanguageCode","contextValue","setItem","children","Provider","value","useTranslation","useContext","IdbLru","cache","_cache","size","name","maxSize","assert","ready","init","a","cache1","localForage","cache2","length","cache1Size","cache2Size","waitForReady","delay","update","key","setValue","_CacheTemp","clear","has","_value","undefined","remove","removeItem","get","v","set","sdpCache","webRtcStarConnectWithSdpCache","webRtcStarConnect","multiaddress","options","simplePeer","cid","getPeerId","_pc","remoteDescription","sdp","webRtcStarUpgradeInboundWithSdpCache","webRtcStarUpgradeInbound","maConn","connection","remotePeer","toB58String","conn","getWebRtcPeerConnectionInfo","peerId","sdpString","sdpTransform","webRtcPeerConnectionInfo","ip","media","port","protocol","withWebRtcSdpCache","ipfs","libp2p","transportManager","_transports","_connect","bind","_upgrader","upgradeInbound","blockReceivedPeerCidCache","QuickLRU","bitswapUpdateReceiveCountersWithBlockReceivedPeerCidCache","bitswapUpdateReceiveCounters","block","exists","peerCid","blockCid","toString","ipld","bs","_bitswap","_updateReceiveCounters","thumbnailUrls","bannerUrls","mediaUrls","displayNames","descriptions","descriptionUrls","contents","randomIndex","getRandomItemFromArray","array","Math","floor","random","createWindowSav3IpfsTestMethods","sav3Ipfs","sav3IpfsTest","add","data","content","res","log","file","path","chunk","push","addresses","swarm","addrs","i","addr","string","peers","peer","addrString","editProfile","descriptionUrl","editUserProfile","displayName","description","substring","thumbnailUrl","bannerUrl","publishPosts","amount","mediaUrl","publishPost","editProfileAndPublishPosts","importExport","_newPrivateKey","id","oldId","oldCid","oldPublicKey","publicKey","getOwnPeerCid","oldPeerCid","getPrivateKey","oldPrivateKey","setPrivateKey","newId","newCid","newPublicKey","newPeerCid","newPrivateKey","postRepliesCache","cachePostReplyCid","parentPostCid","postRepliesCids","JSON","parse","stringify","getPostRepliesCids","postCid","keys","ipnsClient","_initIpfs","catch","privateKey","ipfsOptions","preload","enabled","Bootstrap","Addresses","Delegates","Swarm","Identity","PrivKey","Ipfs","create","this","webRtcUtils","bitswapUtils","IpnsClient","on","ipnsPath","ipnsValue","emit","then","setMaxListeners","peersStats","getPeersCids","peerCids","getPeerStats","metrics","connectionInfo","peerMetrics","forPeer","PeerId","createFromCID","toJSON","dataReceived","Number","dataSent","peerStats","peerCidsSet","Set","export","encryptedPrivateKeyString","crypto","import","uint8ArrayToString","bytes","base64PrivateKey","stop","ownCid","datastore","ipns","getLocalKey","datastoreValue","ipnsRecord","unmarshal","sequence","startsWith","validity","marshalledIpnsRecord","marshal","put","resolve","fileCid","next","getOwnIpnsRecord","record","ownIpfsValue","getIpfsFile","lastIpnsData","subscribe","ipnsValues","ipnsPaths","Array","isArray","getOwnIpnsData","ipnsData","newPost","previousPostCid","lastPostCid","timestamp","round","Date","now","userCid","contentCid","newPostCid","newIpnsData","newIpnsDataCid","publishIpnsRecord","postRepliesUtils","userCids","sort","followingCid","following","getOwnIpnsRecordSequence","publish","putOwnIpnsRecord","profile","diplayNameCid","descriptionCid","thumbnailUrlCid","bannerUrlCid","profileCid","profileCids","getRecords","remoteIpnsRecord","remoteSequence","posts","maxPostCount","getPost","post","repliesCids","EventEmitter","useStyles","makeStyles","theme","paddingTop","paddingBottom","overflow","Modal","open","onClose","actions","classes","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","fullWidth","maxWidth","Box","alignItems","display","px","height","sav3","topBar","flexGrow","IconButton","onClick","Divider","DialogContent","className","useUserIpnsData","userIpnsData","setUserIpnsData","useEffect","onPublish","newIpnsPath","subscribeToIpnsPath","off","useUserProfile","defaultUserProfile","userProfile","setUserProfile","getUserProfile","useOwnUserCid","ownUserCid","setOwnUserCid","getOwnUserCid","errorMessage","border","marginBottom","spacing","avatar","marginTop","width","borderWidth","borderStyle","borderColor","wordBreak","ParentPost","parentPost","pr","py","Avatar","src","pt","pl","Typography","variant","color","PublishPostModal","t","setContent","setErrorMessage","handleChange","event","target","subtring","e","handlePublish","message","modalContent","TextField","autoFocus","onChange","margin","placeholder","multiline","rows","Alert","severity","modalActions","Button","disableElevation","logo","logoButton","createTextButtonBox","createIconButtonBox","up","createIconButton","boxShadow","text","root","paddingLeft","paddingRight","PublishPostButton","openPublishPostModal","setOpenPublishPostModal","my","mx","Fab","LeftMenu","List","ListItem","button","component","RouterLink","to","ListItemIcon","fontSize","ListItemText","primary","menu","position","bottom","right","BottomMenu","route","useRouteMatch","activeMenu","params","BottomNavigation","BottomNavigationAction","icon","baseMuiThemeOptions","values","xs","sm","md","lg","xl","layout","columns","left","middle","drawerMenu","popoverMenu","borderRadius","palette","divider","shape","overrides","MuiToolbar","minHeight","MuiDialog","paper","paperFullWidth","MuiSvgIcon","fontSizeLarge","MuiFab","createTheme","muiThemeOptions","createMuiTheme","responsiveFontSizes","themes","Light","Dark","type","light","main","dark","secondary","ThemeContext","setTheme","ThemeProvider","defaultThemeName","localStorageThemeName","themeName","_setThemeName","ThemeSwitcher","themeMenuItems","MenuItem","Select","label","TranslationSwitcher","translationMenuItems","translationName","appBar","backgroundColor","background","default","appBarSticky","appBarStickyAfter","TopBar","elevation","positionSticky","Toolbar","disableGutters","useLanguageCode","followManager","followingCache","blockedCache","deleteBlocked","getAllFollowing","setFollowing","addFollowing","deleteFollowing","addBlocked","FollowingContext","FollowingProvider","blocked","setBlocked","getAllBlocked","followingObject","blockedObject","prevFollowing","setAllFollowing","userCidsObject","prevBlocked","setAllBlocked","useIsFollowing","isFollowing","setIsFollowing","useCallback","menuItemIcon","minWidth","moreIconButton","padding","FollowMenuItem","followButton","propTypes","PropTypes","isRequired","PostMoreMenu","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","stopPropagation","Menu","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","Boolean","timeToLive","decodeCid","encodedCid","expireTimestamp","object","atob","c","Error","btoa","replace","noop","useInterval","callback","immediate","savedCallback","useRef","current","setInterval","clearInterval","usePostRepliesCids","setRepliesCids","useCopyClipboard","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","hide","setTimeout","clearTimeout","imgMedia","textDecoration","contentLink","marginLeft","actionIconButton","cursor","rgbaOpacity","action","hover","tapHighlightColor","userSelect","rgbaString","factor","match","r","g","b","toFixed","ReplyIconButton","ShareButton","setCopied","getUrl","encodedPostCid","urlUtils","location","origin","Tooltip","title","enterDelay","leaveDelay","PostContent","contentComponents","link","getPostContentLink","split","contentPart1","contentPart2","href","Link","rel","cardMedia","mediaSrc","getPostContentMediaSrc","CardMedia","image","linkIsVideo","controls","autoPlay","muted","Card","links","urlRegex","strict","forceHttps","linkIsMedia","trim","useDate","date","setDate","formatDate","postTimestamp","day","toLocaleString","month","year","formatTimeAgo","useLocation","history","useHistory","encodedUserCid","userProfileUrl","postUrl","navigateToPostUrl","tagName","pathname","pb","justifyContent","style","transform","PostsFeed","postComponents","useUserPosts","defaultUserPosts","userPosts","setUserPosts","getUserPostsFromLastPostCid","getContentLink","descriptionComponents","descriptionPart1","descriptionPart2","opacity","EditProfileModal","previousProfile","setProfile","newProfile","ShareMenuItem","ProfileMoreMenu","emptyImage","banner","EditProfileButton","openEditProfileModal","setOpenEditProfileModal","FollowButton","p","flexDirection","CardHeader","subheader","urlUserCid","useParams","urlIsExpired","isOwnProfile","goBack","noWrap","useOwnPeerCid","ownPeerCid","setOwnPeerCid","HomeMenu","AvatarDrawerMenuButton","drawerOpen","setDrawerOpen","disableRipple","disableFocusRipple","Drawer","achor","useFollowingOnce","createLocalStorageCache","func","localStorageKey","delete","localStorageMemoize","memoize","getBootstrapUsersCids","fetchBootstrapUsersCidsFromGoogleSheet","cids","error","googleSheetId","bootstrapUsers","fetch","isIpfs","maxAge","useBootstrapUsersCids","bootstrapUsersCids","setBootstrapUsersCids","bootstrapUsersUtils","useUsersIpnsData","usersIpnsData","setUsersIpnsData","ipnsPathsSet","previousUsersIpnsData","subscribeToIpnsPaths","entries","useUsersProfiles","usersProfiles","setUsersProfiles","previousUsersProfiles","useUsersPosts","usersPosts","setUsersPosts","profiles","lastPostCids","userPost","previousUsersPosts","contentInput","PublishPostForm","usersFollowingCache","addNewUsersFollowing","previousUsersFollowing","newUsersFollowing","useUsersFollowing","uniqueUserCids","userCidsString","usersFollowing","setUsersFollowing","userFollowing","getUserFollowing","followingCids","followingOfFollowing","postsObject","feed","CircularProgress","search","setUserCid","InputProps","spellCheck","startAdornment","InputAdornment","usePeersCids","setPeersCids","pollCount","setPollCount","peersCids","getIsoCountryCodeFromIpAttempts","ipIsoCountryCodeCache","getIsoCountryCodeFromIpCached","isoCountryCode","getIsoCountryCodeFromIp","apiUrl","toUpperCase","assertIsIsoCountryCode","isoCountryCodeType","test","getIsoCountryCodesFromIps","ips","promises","Promise","all","isoCountryCodeToCountryFlagEmoji","chars","map","charCodeAt","String","fromCodePoint","usePeersStats","setPeersStats","getPeersStats","peersStat","ipUtils","countryFlagEmoji","Peer","prettyBytes","Feed","peerComponents","User","user","UsersFeed","users","userComponents","useFollowing","filter","fontFamily","maxHeight","overflowY","ImportForm","setData","successMessage","setSuccessMessage","handleFocus","setSelectionRange","handleExport","handleImport","dataObject","confirmMessage","onFocus","usePosts","postCids","setPosts","previousPosts","usePostWithReplies","setParentPost","replies","postWithReplies","leftColumn","middleColumn","rightColumn","bottomMenu","App","Grid","container","justify","item","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","document","getElementById","webSocketClient","url","subscriptionIpnsValueCache","start","WebSocketClient","getIpnsValueFromIpnsRecord","close","isReady","validateIpnsPaths","allResultsAreCached","cachedIpnsValues","cachedIpnsValue","ipnsRecords","getIpnsValuesFromIpnsRecords","getUnmarshalledIpnsRecords","unmarshalled","embedPublicKey","public","marshalledRecord","Buffer","from","Uint8Array","extractPublicKey","validate","createFromPubKey","equals","createFromB58String","getUnmarshalledIpnsRecord","args"],"mappings":"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","file":"static/js/main.92213664.chunk.js","sourcesContent":["const config = {\n  bootstrapUsersGoogleSheetId: '1O4Wutfc34QeBEKIP5X4XtwpmRLOt5ytoDc1qv4nSHIg',\n  starServers: ['/dns4/star.sav3.org/tcp/443/wss/p2p-webrtc-star/'],\n  ipnsServer: 'https://ipns.sav3.org',\n  urlTimeToLive: 1000 * 60 * 60 * 24\n}\n\nif (process.env.NODE_ENV === 'development' && process.env.REACT_APP_IS_DOCKER) {\n  config.starServers = ['/dns4/localhost/tcp/13579/wss/p2p-webrtc-star/']\n  config.ipnsServer = 'https://localhost:9545'\n}\n\nwindow.config = config\n\nexport default config\n","import merge from 'lodash.merge'\nimport defaultTranslation from './translations/en-us'\n\nconst createTranslation = (_translation) => {\n  const translation = merge({}, defaultTranslation, _translation)\n  return translation\n}\n\nexport default createTranslation\n","import createTranslation from '../create-translation'\n\nconst translation = createTranslation({\n  // profile\n  Follow: () => 'Follow',\n  Unfollow: () => 'Unfollow',\n  'Edit profile': () => 'Edit profile',\n  'Display name': () => 'Display name',\n  Description: () => 'Description',\n  'Thumbnail URL': () => 'Thumbnail URL',\n  'Banner URL': () => 'Banner URL',\n\n  // menu\n  Home: () => 'Home',\n  Profile: () => 'Profile',\n  Search: () => 'Search',\n  'Search user ID': () => 'Search user ID',\n  Peers: () => 'Peers',\n  'Connected peers posts': () => 'Connected peers posts',\n  Stats: () => 'Stats',\n  'Connected peers stats': () => 'Connected peers stats',\n  'Connecting to peers': () => 'Connecting to peers',\n  Following: () => 'Following',\n  'Not following anyone': () => 'Not following anyone',\n  Export: () => 'Export',\n  Import: () => 'Import',\n\n  // post\n  'Uncensorable content': () => 'Uncensorable content',\n  Post: () => 'Post',\n  'Copied to clipboard': () => 'Copied to clipboard',\n  Share: () => 'Share',\n\n  // global\n  'URL expired': () => 'URL expired'\n})\n\nexport default translation\n","import createTranslation from '../create-translation'\nimport {register as registerTimeAgo} from 'timeago.js'\n\nconst timeAgo = (number, index, totalSec) => {\n  // copy paste timeAgo locale from https://github.com/hustcc/timeago.js/tree/master/src/lang\n  return [\n    ['justo ahora', 'en un rato'],\n    ['hace %s segundos', 'en %s segundos'],\n    ['hace 1 minuto', 'en 1 minuto'],\n    ['hace %s minutos', 'en %s minutos'],\n    ['hace 1 hora', 'en 1 hora'],\n    ['hace %s horas', 'en %s horas'],\n    ['hace 1 día', 'en 1 día'],\n    ['hace %s días', 'en %s días'],\n    ['hace 1 semana', 'en 1 semana'],\n    ['hace %s semanas', 'en %s semanas'],\n    ['hace 1 mes', 'en 1 mes'],\n    ['hace %s meses', 'en %s meses'],\n    ['hace 1 año', 'en 1 año'],\n    ['hace %s años', 'en %s años']\n  ][index]\n}\nregisterTimeAgo('es-MX', timeAgo)\n\nconst translation = createTranslation({\n  // profile\n  Follow: () => 'Seguir',\n  Unfollow: () => 'Dejar de seguir',\n  'Edit profile': () => 'Editar perfil',\n  'Display name': () => 'Nombre para mostrar',\n  Description: () => 'Descripción',\n  'Thumbnail URL': () => 'URL de miniatura',\n  'Banner URL': () => 'URL del banner',\n\n  // menu\n  Home: () => 'Casa',\n  Profile: () => 'Perfil',\n  Search: () => 'Buscar',\n  'Search user ID': () => 'Buscar ID de usuario',\n  Peers: () => 'Compañeros',\n  'Connected peers posts': () => 'Publicaciones de compañeros conectados',\n  Stats: () => 'Estadisticas',\n  'Connected peers stats': () => 'Estadísticas de compañeros conectados',\n  'Connecting to peers': () => 'Conectando con sus compañeros',\n  Following: () => 'Siguiendo',\n  'Not following anyone': () => 'No seguir a nadie',\n  Export: () => 'Exportar',\n  Import: () => 'Importar',\n\n  // post\n  'Uncensorable content': () => 'Contenido sin censura',\n  Post: () => 'Publicación'\n})\n\nexport default translation\n","// credits: telegram @harq72\n\nimport createTranslation from '../create-translation'\nimport {register as registerTimeAgo} from 'timeago.js'\n\nconst timeAgo = (number, index, totalSec) => {\n  // copy paste timeAgo locale from https://github.com/hustcc/timeago.js/tree/master/src/lang\n  return [\n    ['éppen most', 'éppen most'],\n    ['%s másodperce', '%s másodpercen belül'],\n    ['1 perce', '1 percen belül'],\n    ['%s perce', '%s percen belül'],\n    ['1 órája', '1 órán belül'],\n    ['%s órája', '%s órán belül'],\n    ['1 napja', '1 napon belül'],\n    ['%s napja', '%s napon belül'],\n    ['1 hete', '1 héten belül'],\n    ['%s hete', '%s héten belül'],\n    ['1 hónapja', '1 hónapon belül'],\n    ['%s hónapja', '%s hónapon belül'],\n    ['1 éve', '1 éven belül'],\n    ['%s éve', '%s éven belül']\n  ][index]\n}\n\nregisterTimeAgo('hu', timeAgo)\n\nconst translation = createTranslation({\n  // profile\n  Follow: () => 'Követés',\n  Unfollow: () => 'Követés megszüntetése',\n  'Edit profile': () => 'Profil szerkesztése',\n  'Display name': () => 'Látható név',\n  Description: () => 'Leírás',\n  'Thumbnail URL': () => 'Profilkép URL',\n  'Banner URL': () => 'Banner URL',\n\n  // menu\n  Home: () => 'Home',\n  Profile: () => 'Profil',\n  Search: () => 'Keresés',\n  'Search user ID': () => 'Felhasználó ID keresése',\n  Peers: () => 'Kapcsolatok',\n  'Connected peers posts': () => 'Kapcsolatok üzenetei',\n  Stats: () => 'Statisztikák',\n  'Connected peers stats': () => 'Kapcsolatok statisztikái',\n  'Connecting to peers': () => 'Kapcsolódás',\n  Following: () => 'Követések',\n  'Not following anyone': () => 'Nem követ senkit',\n  Export: () => 'Exportálás',\n  Import: () => 'Importálás',\n\n  // post\n  'Uncensorable content': () => 'Cenzúrázhatatlan tartalom'\n})\n\nexport default translation\n","import enUs from './translations/en-us'\nimport esMx from './translations/es-mx'\nimport hu from './translations/hu'\n\n/* list of language codes\n\naf, sq, ar-SA, ar-IQ, ar-EG, ar-LY, ar-DZ, ar-MA, ar-TN, ar-OM,\nar-YE, ar-SY, ar-JO, ar-LB, ar-KW, ar-AE, ar-BH, ar-QA, eu, bg,\nbe, ca, zh-TW, zh-CN, zh-HK, zh-SG, hr, cs, da, nl, nl-BE, en,\nen-US, en-EG, en-AU, en-GB, en-CA, en-NZ, en-IE, en-ZA, en-JM,\nen-BZ, en-TT, et, fo, fa, fi, fr, fr-BE, fr-CA, fr-CH, fr-LU,\ngd, gd-IE, de, de-CH, de-AT, de-LU, de-LI, el, he, hi, hu,\nis, id, it, it-CH, ja, ko, lv, lt, mk, mt, no, pl,\npt-BR, pt, rm, ro, ro-MO, ru, ru-MI, sz, sr, sk, sl, sb,\nes, es-AR, es-GT, es-CR, es-PA, es-DO, es-MX, es-VE, es-CO,\nes-PE, es-EC, es-CL, es-UY, es-PY, es-BO, es-SV, es-HN, es-NI,\nes-PR, sx, sv, sv-FI, th, ts, tn, tr, uk, ur, ve, vi, xh,\nji, zu\n\n*/\n\nconst translations = {\n  'en-US': enUs,\n  'es-MX': esMx,\n  hu: hu\n}\nObject.freeze(translations)\n\nexport default translations\n","import {useState, createContext} from 'react'\nimport translations from './index'\n\nexport const LanguageCodeContext = createContext({\n  languageCode: 'en-US',\n  setLanguageCode: null\n})\n\nconst LanguageCodeProvider = (props) => {\n  const defaultLanguageCode = 'en-US'\n  const preferredLanguageCode = window.navigator.language\n  let localStorageLanguageCode = localStorage.getItem('languageCode') || preferredLanguageCode || defaultLanguageCode\n  if (!translations[localStorageLanguageCode]) {\n    console.warn(`no available translation for '${localStorageLanguageCode}'`)\n    localStorageLanguageCode = defaultLanguageCode\n  }\n\n  const [languageCode, _setLanguageCode] = useState(localStorageLanguageCode)\n\n  const setLanguageCode = (languageCode) => {\n    if (!translations[languageCode]) {\n      console.warn(`no available translation for '${languageCode}'`)\n      return\n    }\n    localStorage.setItem('languageCode', languageCode)\n    _setLanguageCode(languageCode)\n  }\n\n  const contextValue = {\n    languageCode,\n    setLanguageCode\n  }\n\n  const {children} = props\n  return <LanguageCodeContext.Provider value={contextValue}>{children}</LanguageCodeContext.Provider>\n}\n\nexport default LanguageCodeProvider\n","import {useContext} from 'react'\nimport {LanguageCodeContext} from './language-code-provider'\nimport translations from './index'\n\nconst useTranslation = () => {\n  const {languageCode} = useContext(LanguageCodeContext)\n  return translations[languageCode]\n}\n\nexport default useTranslation\n","// forked from https://www.npmjs.com/package/hashlru and replaced cache with localforage (indexeddb key value store)\n// TODO: needs to fork the unit tests, no clue if it works properly or has performance issues\n\nimport * as localForage from 'localforage'\nimport assert from 'assert'\nimport delay from 'delay'\n\nconst IdbLru = ({name, maxSize} = {}) => {\n  assert(typeof name === 'string', `invalid idb lru cache '${name}' not a string`)\n  assert(typeof maxSize === 'number', `invalid idb lru maxSize '${maxSize}' not a number`)\n\n  let cache, _cache, size\n  // init asynchronously because it makes a nice api\n  // and should not cause any problem\n  let ready = false\n  const init = async () => {\n    const cache1 = localForage.createInstance({name})\n    const cache2 = localForage.createInstance({name: `_${name}`})\n    const cache1Size = await cache1.length()\n    const cache2Size = await cache2.length()\n    // the bigger cache should become _cache\n    if (cache1Size > cache2Size) {\n      _cache = cache1\n      cache = cache2\n      size = cache1Size\n    }\n    else {\n      _cache = cache2\n      cache = cache1\n      size = cache2Size\n    }\n    ready = true\n  }\n  init()\n\n  const waitForReady = async () => {\n    if (ready) {\n      return\n    }\n    await delay(10)\n    await waitForReady()\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} setValue\n   */\n  async function update (key, setValue) {\n    await cache.setItem(key, setValue)\n    size++\n    if (size >= maxSize) {\n      size = 0\n      const cacheTemp = cache\n      const _CacheTemp = _cache\n      _cache = cacheTemp\n      cache = _CacheTemp\n      await cache.clear()\n    }\n  }\n\n  return {\n    has: async function (key) {\n      await waitForReady()\n      const value = await cache.getItem(key)\n      const _value = await _cache.getItem(key)\n      return (value !== null && value !== undefined) || (_value !== null && _value !== undefined)\n    },\n    remove: async function (key) {\n      await waitForReady()\n      await cache.removeItem(key)\n      await _cache.removeItem(key)\n    },\n    get: async function (key) {\n      await waitForReady()\n      const value = await cache.getItem(key)\n      const _value = await _cache.getItem(key)\n\n      let v = value\n      if (v !== null && value !== undefined) return v\n      if ((v = _value) !== null && (v = _value) !== undefined) {\n        await update(key, v)\n        return v\n      }\n    },\n    set: async function (key, setValue) {\n      await waitForReady()\n      const value = await cache.getItem(key)\n      if (value !== null && value !== undefined) {\n        await cache.setItem(key, setValue)\n      }\n      else {\n        await update(key, setValue)\n      }\n    },\n    clear: async function () {\n      await waitForReady()\n      await cache.clear()\n      await _cache.clear()\n    }\n  }\n}\n\nwindow.IdbLru = IdbLru\n\nexport default IdbLru\n","/*\nhow to find connection info from sdp\n\nthe ip address, port and protocol are found in c= and m=, e.g.:\n\no=- 5426292242984389744 2 IN IP4 127.0.0.1\ns=-\nt=0 0\na=group:BUNDLE 0\na=msid-semantic: WMS\nm=application 64656 UDP/DTLS/SCTP webrtc-datachannel\nc=IN IP4 31.220.1.161\nb=AS:30\na=candidate:970568614 1 udp 2113937151 f6bd80ff-8fef-4b18-b97e-5d6317873c95.local 64656 typ host generation 0 network-cost 999\na=candidate:842163049 1 udp 1677729535 31.220.1.161 64656 typ srflx raddr 0.0.0.0 rport 0 generation 0 network-cost 999\na=ice-ufrag:9nHb\na=ice-pwd:BBIh/kIoQ58WUUj9GxikRqZN\n...\n*/\n\nimport * as sdpTransform from 'sdp-transform'\nimport assert from 'assert'\n\nimport IdbLru from 'src/lib/utils/idb-lru'\nexport const sdpCache = IdbLru({\n  name: 'sdpCache',\n  maxSize: 2000\n})\n\n/**\n * cache webrtc sdp of each peer to get their ip addresses later\n *\n * @param {IPFS} ipfs\n * @returns {IPFS}\n */\nexport const withWebRtcSdpCache = (ipfs) => {\n  // outbound webrtc connections\n  let webRtcStarConnect = ipfs.libp2p.transportManager._transports.get('WebRTCStar')._connect\n  webRtcStarConnect = webRtcStarConnect.bind(ipfs.libp2p.transportManager._transports.get('WebRTCStar'))\n  ipfs.libp2p.transportManager._transports.get('WebRTCStar')._connect = webRtcStarConnectWithSdpCache(webRtcStarConnect)\n\n  // inbound webrtc connections\n  let webRtcStarUpgradeInbound = ipfs.libp2p.transportManager._transports.get('WebRTCStar')._upgrader.upgradeInbound\n  webRtcStarUpgradeInbound = webRtcStarUpgradeInbound.bind(ipfs.libp2p.transportManager._transports.get('WebRTCStar')._upgrader)\n  ipfs.libp2p.transportManager._transports.get('WebRTCStar')._upgrader.upgradeInbound = webRtcStarUpgradeInboundWithSdpCache(webRtcStarUpgradeInbound)\n\n  return ipfs\n}\n\n/**\n * wrap WebRTCStar._connect function to cache each peer sdp\n *\n * @param {Function} webRtcStarConnect - get it from ipfs.libp2p.transportManager._transports.get('WebRTCStar')._connect\n * @returns {Function} a wrapped WebRTCStar._connect function\n */\nconst webRtcStarConnectWithSdpCache = (webRtcStarConnect) => async (multiaddress, options) => {\n  const simplePeer = await webRtcStarConnect(multiaddress, options)\n  const cid = multiaddress.getPeerId()\n  sdpCache.set(cid, simplePeer._pc.remoteDescription.sdp)\n  // console.log('outbound webrtc connection', cid, simplePeer._pc.remoteDescription.sdp)\n  return simplePeer\n}\n\n/**\n * wrap WebRTCStar._upgrader.upgradeInbound function to cache each peer sdp\n *\n * @param {Function} webRtcStarUpgradeInbound - get it from ipfs.libp2p.transportManager._transports.get('WebRTCStar')._upgrader.upgradeInbound\n * @returns {Function} a wrapped WebRTCStar._upgrader.upgradeInbound function\n */\nconst webRtcStarUpgradeInboundWithSdpCache = (webRtcStarUpgradeInbound) => async (maConn) => {\n  const connection = await webRtcStarUpgradeInbound(maConn)\n  const cid = connection.remotePeer.toB58String()\n  sdpCache.set(cid, maConn.conn._pc.remoteDescription.sdp)\n  // console.log('inbound webrtc connection', cid, maConn.conn._pc.remoteDescription.sdp)\n  return connection\n}\n\n/**\n * get ip, port and protocol of a webrtc peer\n *\n * @param {string} peerId\n * @returns {{ip: string, port: number, protocol: string}}\n */\nexport const getWebRtcPeerConnectionInfo = async (peerId) => {\n  assert(peerId && typeof peerId === 'string', `invalid peer id ${peerId}`)\n  const sdpString = await sdpCache.get(peerId)\n  assert(sdpString, `no sdp cache for peer id '${peerId}'`)\n\n  const sdp = sdpTransform.parse(sdpString)\n  const webRtcPeerConnectionInfo = {\n    ip: sdp.media[0].connection.ip,\n    port: sdp.media[0].port,\n    protocol: sdp.media[0].protocol\n  }\n  return webRtcPeerConnectionInfo\n}\n\nexport default {\n  withWebRtcSdpCache,\n  sdpCache,\n  getWebRtcPeerConnectionInfo\n}\n","import QuickLRU from 'quick-lru'\nexport const blockReceivedPeerCidCache = new QuickLRU({maxSize: 1000})\n\n/**\n * cache the peer cids of senders of blocks/files received\n *\n * @param {IPFS} ipfs\n * @returns {IPFS}\n */\nexport const withBlockReceivedPeerCidCache = (ipfs) => {\n  let bitswapUpdateReceiveCounters = ipfs.ipld.bs._bitswap._updateReceiveCounters\n  bitswapUpdateReceiveCounters = bitswapUpdateReceiveCounters.bind(ipfs.ipld.bs._bitswap)\n  ipfs.ipld.bs._bitswap._updateReceiveCounters = bitswapUpdateReceiveCountersWithBlockReceivedPeerCidCache(bitswapUpdateReceiveCounters)\n\n  return ipfs\n}\n\n/**\n * wrap Bitswap._updateReceiveCounters function to cache the peer cid of the sender of every block\n *\n * @param {Function} bitswapUpdateReceiveCounters - get it from ipfs.ipld.bs._bitswap._updateReceiveCounters\n * @returns {Function} a wrapped Bitswap._updateReceiveCounters function\n */\nconst bitswapUpdateReceiveCountersWithBlockReceivedPeerCidCache = (bitswapUpdateReceiveCounters) => (peerId, block, exists) => {\n  // first time we see this block/file\n  if (exists === false) {\n    const peerCid = peerId\n    const blockCid = block.cid.toString()\n    blockReceivedPeerCidCache.set(peerCid, blockCid)\n    // console.log('bitswapUpdateReceiveCounters', {peerCid, blockCid})\n  }\n  return bitswapUpdateReceiveCounters(peerId, block, exists)\n}\n\nexport default {\n  withBlockReceivedPeerCidCache,\n  blockReceivedPeerCidCache\n}\n","const thumbnailUrls = [\n  'https://i.imgur.com/iKxWt1c.jpg',\n  'https://i.imgur.com/iD4bp6Mb.jpg',\n  'https://i.imgur.com/65kSbHTb.jpg',\n  'https://i.imgur.com/tNsOG3Bb.jpg',\n  'https://i.imgur.com/qiQHwHbb.jpg',\n  'https://i.imgur.com/txRRZpd.jpeg'\n]\n\nconst bannerUrls = ['https://i.imgur.com/ImQWjja.jpeg', 'https://i.imgur.com/txRRZpd.jpeg', 'https://i.imgur.com/2LwSsSu.gif', 'https://i.imgur.com/gpKZaRK.jpeg']\n\nconst mediaUrls = ['https://i.imgur.com/qiQHwHb.mp4', 'i.imgur.com/ImQWjja.jpeg', 'http://i.imgur.com/txRRZpd.jpeg', 'https://i.imgur.com/2LwSsSu.gif', 'i.imgur.com/gpKZaRK.jpeg']\n\nconst displayNames = ['Jimmy Nguyen', 'Shadders', 'WallStreet5', 'Joshua Henslee', 'John M']\n\nconst descriptions = [\n  'Founder and CEO of XYZ.  Architect of the XYZ Protocol',\n  'I like Networks & Social Paradigm Shifts.',\n  'Spanish IT Raspberry Pi 4 + Python #BigData #Hacking #Cybersecurity #IoT #IPv6',\n  'U mad bro?',\n  'Praesentpellentesquetellussitametnuncfaucibus,sitametconvallissemporta.Sedmetudui,luctusavolutpatid,malesuadaadui.'\n]\n\nconst descriptionUrls = ['https://mystartup.com', 'mystartup.com', 'https://twitter.com/crypto', 'https://t.me/sav3org']\n\nconst contents = [\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  'Duis turpis nibh, feugiat gravida venenatis vitae, eleifend eu enim. Ut in luctus lorem. Vivamus lectus nunc, cursus eget eleifend ut, luctus et nibh.',\n  'Suspendisse',\n  'Praesent pellentesque tellus sit amet nunc faucibus, sit amet convallis sem porta. Sed metus dui, luctus a volutpat id, malesuada a dui.',\n  'https://verylonglink.com/veryveryveryveryveryveryveryveryveryvery-long-link Praesent pellentesque tellus sit amet nunc faucibus, sit amet convallis sem porta. Sed metus dui, luctus a volutpat id, malesuada a dui',\n  'Nullam egestas eget augue id dapibus',\n  'Praesentpellentesquetellussitametnuncfaucibus,sitametconvallissemporta.Sedmetudui,luctusavolutpatid,malesuadaadui.'\n]\n\nlet randomIndex = 0\nconst getRandomItemFromArray = (array) => {\n  let index = Math.floor(Math.random() * array.length)\n  index += randomIndex++\n  index = index % array.length\n  return array[index]\n}\n\nconst createWindowSav3IpfsTestMethods = (sav3Ipfs) => {\n  window.sav3IpfsTest = {}\n\n  window.sav3IpfsTest.add = async () => {\n    const data = {\n      content: 'hello world ' + Math.random()\n    }\n    const res = await sav3Ipfs.ipfs.add(data)\n    console.log(res)\n    // for await (const res of ipfs.add(data)) {\n    //   console.log(res)\n    // }\n  }\n\n  window.sav3IpfsTest.get = async (cid) => {\n    for await (const file of sav3Ipfs.ipfs.get(cid)) {\n      console.log(file.path)\n\n      if (!file.content) continue\n\n      const content = []\n\n      for await (const chunk of file.content) {\n        content.push(chunk)\n      }\n\n      console.log(content.toString())\n    }\n  }\n\n  window.sav3IpfsTest.addresses = async () => {\n    const res = await sav3Ipfs.ipfs.swarm.addrs()\n    for (const i in res) {\n      for (const addr of res[i].addrs) {\n        addr.string = addr.toString()\n      }\n    }\n    console.log(res)\n  }\n\n  window.sav3IpfsTest.peers = async () => {\n    const res = await sav3Ipfs.ipfs.swarm.peers()\n    for (const peer of res) {\n      peer.addrString = peer.addr.toString()\n    }\n    console.log(res)\n  }\n\n  window.sav3IpfsTest.editProfile = async () => {\n    const descriptionUrl = Math.random() > 0.5 ? getRandomItemFromArray(descriptionUrls) : ''\n    await sav3Ipfs.editUserProfile({\n      displayName: getRandomItemFromArray(displayNames),\n      description: `${getRandomItemFromArray(descriptions).substring(0, 100)} ${descriptionUrl}`,\n      thumbnailUrl: getRandomItemFromArray(thumbnailUrls),\n      bannerUrl: getRandomItemFromArray(bannerUrls)\n    })\n  }\n\n  window.sav3IpfsTest.publishPosts = async (amount = 5) => {\n    while (amount--) {\n      const mediaUrl = Math.random() > 0.5 ? getRandomItemFromArray(mediaUrls) : ''\n      await sav3Ipfs.publishPost({content: `${getRandomItemFromArray(contents).substring(0, 100)} ${mediaUrl}`})\n    }\n  }\n\n  window.sav3IpfsTest.editProfileAndPublishPosts = async (amount) => {\n    await window.sav3IpfsTest.editProfile()\n    await window.sav3IpfsTest.publishPosts(amount)\n  }\n\n  window.sav3IpfsTest.importExport = async (_newPrivateKey) => {\n    await sav3Ipfs.waitForReady()\n    const oldId = await sav3Ipfs.ipfs.id()\n    const oldCid = oldId.id\n    const oldPublicKey = oldId.publicKey\n    const oldPeerCid = await sav3Ipfs.getOwnPeerCid()\n    const oldPrivateKey = await sav3Ipfs.getPrivateKey()\n\n    await sav3Ipfs.setPrivateKey(_newPrivateKey || oldPrivateKey)\n    await sav3Ipfs.waitForReady()\n    const newId = await sav3Ipfs.ipfs.id()\n    const newCid = newId.id\n    const newPublicKey = newId.publicKey\n    const newPeerCid = await sav3Ipfs.getOwnPeerCid()\n    const newPrivateKey = await sav3Ipfs.getPrivateKey()\n\n    console.log('oldCid', oldCid)\n    console.log('newCid', newCid)\n    console.log('oldPeerCid', oldPeerCid)\n    console.log('newPeerCid', newPeerCid)\n    console.log('oldPublicKey', oldPublicKey)\n    console.log('newPublicKey', newPublicKey)\n    console.log('oldPrivateKey', oldPrivateKey)\n    console.log('newPrivateKey', newPrivateKey)\n  }\n}\n\nexport default createWindowSav3IpfsTestMethods\n","import assert from 'assert'\n\nimport IdbLru from 'src/lib/utils/idb-lru'\nexport const postRepliesCache = IdbLru({\n  name: 'postRepliesCache',\n  maxSize: 2000\n})\n\nexport const cachePostReplyCid = async ({cid, parentPostCid} = {}) => {\n  assert(cid && typeof cid === 'string', `postRepliesUtils.cachePostReplyCid cid '${cid}' not a string`)\n  assert(parentPostCid && typeof parentPostCid === 'string', `postRepliesUtils.cachePostReplyCid parentPostCid '${parentPostCid}' not a string`)\n  const res = await postRepliesCache.get(parentPostCid)\n  let postRepliesCids = {}\n  if (res) {\n    postRepliesCids = JSON.parse(res)\n  }\n  postRepliesCids[cid] = true\n  console.log('postRepliesUtils.cachePostReplyCid', {cid, parentPostCid, postRepliesCids, res})\n  await postRepliesCache.set(parentPostCid, JSON.stringify(postRepliesCids))\n}\n\nexport const getPostRepliesCids = async (postCid) => {\n  assert(postCid && typeof postCid === 'string', `postRepliesUtils.getPostRepliesCids postCid '${postCid}' not a string`)\n  const res = await postRepliesCache.get(postCid)\n  let postRepliesCids = []\n  if (res) {\n    postRepliesCids = Object.keys(JSON.parse(res))\n  }\n\n  console.log('postRepliesUtils.getPostRepliesCids', {postCid, postRepliesCids, res})\n  return postRepliesCids\n}\n\nexport default {\n  postRepliesCache,\n  cachePostReplyCid,\n  getPostRepliesCids\n}\n","import Ipfs from 'ipfs'\nimport webRtcUtils from './utils/webrtc'\nimport bitswapUtils from './utils/bitswap'\nimport PeerId from 'peer-id'\nimport delay from 'delay'\nimport assert from 'assert'\nimport IpnsClient from './ipns-client'\nimport EventEmitter from 'events'\nimport ipns from 'ipns'\nimport crypto from 'libp2p-crypto'\nimport createWindowSav3IpfsTestMethods from './utils/create-window-sav3-ipfs-test-methods'\nimport uint8ArrayToString from 'uint8arrays/to-string'\nimport config from 'src/config'\nimport postRepliesUtils from './utils/post-replies'\n\nclass Sav3Ipfs extends EventEmitter {\n  constructor () {\n    super()\n    this.ipfs = null\n    this.ipnsClient = null\n    this._initIpfs().catch(console.log)\n  }\n\n  async _initIpfs ({privateKey} = {}) {\n    const ipfsOptions = {\n      preload: {enabled: false},\n      config: {\n        Bootstrap: [],\n        Addresses: {\n          Delegates: [],\n          Swarm: config.starServers\n        }\n      }\n      // libp2p: {\n      //   config: {\n      //     dht: {\n      //       enabled: true\n      //     }\n      //   }\n      // }\n    }\n\n    // a random repo allows multiple tabs to have different peers\n    // which is good for testing\n    if (!privateKey && process.env.NODE_ENV === 'development') {\n      ipfsOptions.repo = Math.random().toString(36).substring(7)\n    }\n\n    // init ipfs with a specified private key\n    if (privateKey) {\n      ipfsOptions.config.Identity = {PrivKey: privateKey}\n    }\n\n    console.log('_initIpfs', {ipfsOptions})\n\n    const ipfs = await Ipfs.create(ipfsOptions)\n    this.ipfs = webRtcUtils.withWebRtcSdpCache(ipfs)\n    this.ipfs = bitswapUtils.withBlockReceivedPeerCidCache(ipfs)\n\n    // init ipns client\n    this.ipnsClient = IpnsClient({ipfs})\n    // subscribe to new publishes\n    this.ipnsClient.on('publish', (ipnsPath, ipnsValue) => {\n      this.emit('publish', ipnsPath, ipnsValue)\n    })\n\n    // add to window for testing and debugging in console\n    window.ipfs = this.ipfs\n\n    this.ipfs.libp2p.on('peer:discovery', (peer) => {\n      console.log('discovered', peer)\n    })\n\n    this.ipfs.libp2p.on('peer:connect', (peer) => {\n      console.log('connected', peer)\n      this.ipfs.swarm.peers().then((peers) => console.log('current peers connected: ', peers))\n    })\n\n    // silence listener memory leak warning\n    this.setMaxListeners(100)\n  }\n\n  /**\n   * get information and stats about all connected peers\n   *\n   * @returns {Promise<{peerCid: string, ip: string | undefined, port: number | undefined, protocol: string | undefined, dataReceived: number, dataSent: number}>}\n   */\n  async getPeersStats () {\n    await this.waitForReady()\n\n    const peersStats = []\n    const peerCids = await this.getPeersCids()\n    for (const peerCid of peerCids) {\n      peersStats.push(await this.getPeerStats(peerCid))\n    }\n    console.log('getPeersStats', {peersStats})\n    return peersStats\n  }\n\n  async getPeerStats (peerCid) {\n    await this.waitForReady()\n    assert(typeof peerCid === 'string', `sav3Ipfs.getPeerStats peerId '${peerCid}' not a string`)\n\n    const metrics = this.ipfs.libp2p.metrics\n\n    let ip, port, protocol\n    try {\n      const connectionInfo = await webRtcUtils.getWebRtcPeerConnectionInfo(peerCid)\n      ip = connectionInfo.ip\n      port = connectionInfo.port\n      protocol = connectionInfo.protocol\n    }\n    catch (e) {}\n\n    const peerMetrics = metrics.forPeer(PeerId.createFromCID(peerCid)).toJSON()\n    const dataReceived = Number(peerMetrics.dataReceived)\n    const dataSent = Number(peerMetrics.dataSent)\n\n    const peerStats = {peerCid, ip, port, protocol, dataReceived, dataSent}\n    return peerStats\n  }\n\n  async getPeersCids () {\n    await this.waitForReady()\n    const peers = await this.ipfs.swarm.peers()\n    const peerCidsSet = new Set()\n    const peerCids = []\n    for (const peer of peers) {\n      const peerCid = peer.peer\n      // finds duplicate peers sometimes for unknown reason\n      if (peerCidsSet.has(peerCid)) {\n        continue\n      }\n      peerCidsSet.add(peerCid)\n      peerCids.push(peerCid)\n    }\n    return peerCids\n  }\n\n  async getPrivateKey () {\n    await this.waitForReady()\n    const encryptedPrivateKeyString = await this.ipfs.key.export('self', 'password')\n    const privateKey = await crypto.keys.import(encryptedPrivateKeyString, 'password')\n    return uint8ArrayToString(privateKey.bytes, 'base64')\n  }\n\n  async setPrivateKey (base64PrivateKey) {\n    assert(base64PrivateKey && typeof base64PrivateKey === 'string', `sav3Ipfs.setPrivateKey base64PrivateKey '${base64PrivateKey}' not a string`)\n    const ipfs = this.ipfs\n    delete this.ipfs\n    await ipfs.stop()\n    await this._initIpfs({privateKey: base64PrivateKey})\n  }\n\n  async getOwnPeerCid () {\n    await this.waitForReady()\n    return (await sav3Ipfs.ipfs.id()).id\n  }\n\n  async getOwnUserCid () {\n    await this.waitForReady()\n    // currently same as peer cid, but eventually should\n    // be different for privacy\n    return (await sav3Ipfs.ipfs.id()).id\n  }\n\n  async getOwnIpnsRecord () {\n    await this.waitForReady()\n    const ownCid = await sav3Ipfs.getOwnPeerCid()\n    const peerId = PeerId.createFromCID(ownCid)\n    const datastoreValue = await this.ipfs.libp2p.datastore.get(ipns.getLocalKey(peerId.id))\n    const ipnsRecord = ipns.unmarshal(datastoreValue)\n    return ipnsRecord\n  }\n\n  async putOwnIpnsRecord ({value, sequence} = {}) {\n    await this.waitForReady()\n    assert(value && typeof value === 'string', `sav3Ipfs.putOwnIpnsRecord value '${value}' not a string`)\n    assert(typeof sequence === 'number', `sav3Ipfs.putOwnIpnsRecord sequence '${sequence}' not a number`)\n\n    // needs /ipfs/ prefix to ipfs.name.resolve correctly\n    if (!value.startsWith('/ipfs/')) {\n      value = `/ipfs/${value}`\n    }\n\n    const validity = 1000 * 60 * 60 * 24 * 365 * 10 // 10 years\n    const encryptedPrivateKeyString = await this.ipfs.key.export('self', 'password')\n    const privateKey = await crypto.keys.import(encryptedPrivateKeyString, 'password')\n    const ipnsRecord = await ipns.create(privateKey, value, sequence, validity)\n    const marshalledIpnsRecord = ipns.marshal(ipnsRecord)\n\n    const ownCid = await sav3Ipfs.getOwnPeerCid()\n    const peerId = PeerId.createFromCID(ownCid)\n    await this.ipfs.libp2p.datastore.put(ipns.getLocalKey(peerId.id), marshalledIpnsRecord)\n\n    // resolve name right away or won't be available right away putting it\n    await this.ipfs.name.resolve(ownCid)\n    return ipnsRecord\n  }\n\n  async getIpfsFile (fileCid) {\n    await this.waitForReady()\n    assert(fileCid && typeof fileCid === 'string', `sav3Ipfs.getIpfsFile fileCid '${fileCid}' not a string`)\n    const file = (await this.ipfs.get(fileCid).next()).value\n    let content\n    if (file.content) {\n      const res = await file.content.next()\n      content = res && res.value && res.value.toString()\n    }\n    console.log('getIpfsFile', {fileCid, file, content})\n    return content\n  }\n\n  async getOwnIpnsData () {\n    await this.waitForReady()\n    const record = await this.getOwnIpnsRecord()\n    const ownIpfsValue = record.value.toString()\n    const lastIpnsData = await this.getIpfsFile(ownIpfsValue)\n    console.log('getOwnIpnsData', {ownIpfsValue, lastIpnsData})\n    if (!lastIpnsData) {\n      return {}\n    }\n    return JSON.parse(lastIpnsData)\n  }\n\n  async subscribeToIpnsPath (ipnsPath) {\n    assert(ipnsPath && typeof ipnsPath === 'string', `sav3Ipfs.subscribeToIpnsPath ipnsPath '${ipnsPath}' not a string`)\n    await this.waitForReady()\n    const ipnsValues = await this.ipnsClient.subscribe([ipnsPath])\n    return ipnsValues[0]\n  }\n\n  async subscribeToIpnsPaths (ipnsPaths) {\n    assert(Array.isArray(ipnsPaths), `sav3Ipfs.subscribeToIpnsPaths ipnsPaths '${ipnsPaths}' not an array`)\n    await this.waitForReady()\n    const ipnsValues = await this.ipnsClient.subscribe(ipnsPaths)\n    return ipnsValues\n  }\n\n  async publishPost ({content, parentPostCid} = {}) {\n    await this.waitForReady()\n    assert(content && typeof content === 'string', `sav3Ipfs.publishPost content '${content}' not a string`)\n    assert(content.length <= 140, `sav3Ipfs.publishPost content '${content}' longer than 140 chars`)\n    assert(!parentPostCid || typeof parentPostCid === 'string', `sav3Ipfs.publishPost parentPostCid '${parentPostCid}' not a string`)\n\n    const ipnsData = await this.getOwnIpnsData()\n    const newPost = {}\n    newPost.previousPostCid = ipnsData.lastPostCid\n    newPost.timestamp = Math.round(Date.now() / 1000)\n    newPost.userCid = (await this.ipfs.id()).id\n    newPost.contentCid = (await this.ipfs.add(content)).cid.toString()\n\n    const newPostCid = (await this.ipfs.add(JSON.stringify(newPost))).cid.toString()\n    const newIpnsData = {...ipnsData, lastPostCid: newPostCid}\n    const newIpnsDataCid = (await this.ipfs.add(JSON.stringify(newIpnsData))).cid.toString()\n\n    await this.publishIpnsRecord(newIpnsDataCid)\n    console.log('publishPost', {newIpnsDataCid, newPost, newIpnsData, ipnsData, newPostCid, parentPostCid})\n\n    if (parentPostCid) {\n      await postRepliesUtils.cachePostReplyCid({cid: newPostCid, parentPostCid})\n    }\n\n    return newPostCid\n  }\n\n  async setFollowing (userCids) {\n    await this.waitForReady()\n    assert(Array.isArray(userCids), `sav3Ipfs.setFollowing userCids '${userCids}' not an array`)\n\n    // sort to avoid creating cids if unnecessary\n    userCids = [...userCids].sort()\n\n    const ipnsData = await this.getOwnIpnsData()\n    const followingCid = (await this.ipfs.add(JSON.stringify(userCids))).cid.toString()\n    if (ipnsData.followingCid === followingCid) {\n      console.log('setFollowing duplicate following cid', {userCids})\n      return\n    }\n    const newIpnsData = {...ipnsData, followingCid}\n    const newIpnsDataCid = (await this.ipfs.add(JSON.stringify(newIpnsData))).cid.toString()\n\n    await this.publishIpnsRecord(newIpnsDataCid)\n    console.log('setFollowing', {newIpnsDataCid, userCids, followingCid, newIpnsData, ipnsData})\n\n    return followingCid\n  }\n\n  async getUserFollowing (userCid) {\n    await this.waitForReady()\n    assert(userCid && typeof userCid === 'string', `sav3Ipfs.getUserFollowing userCid '${userCid}' not a string`)\n    let following = []\n\n    const [ipnsValue] = await this.ipnsClient.subscribe([userCid])\n    if (ipnsValue) {\n      const ipnsData = JSON.parse(await this.getIpfsFile(ipnsValue))\n      if (ipnsData.followingCid) {\n        following = JSON.parse(await this.getIpfsFile(ipnsData.followingCid))\n      }\n    }\n\n    console.log('getUserFollowing', {userCid, following, ipnsValue})\n    return following\n  }\n\n  async publishIpnsRecord (newIpnsDataCid) {\n    await this.waitForReady()\n    assert(typeof newIpnsDataCid === 'string', `sav3Ipfs.publishIpnsRecord '${newIpnsDataCid}' not a string`)\n    // use the ipns server until ipfs.name.publish is implemented in browser\n    const sequence = (await this.getOwnIpnsRecordSequence()) + 1\n    await this.ipnsClient.publish({value: newIpnsDataCid, sequence})\n    await this.putOwnIpnsRecord({value: newIpnsDataCid, sequence})\n    console.log('publishIpnsRecord', {newIpnsDataCid, sequence})\n  }\n\n  async editUserProfile ({displayName, description, thumbnailUrl, bannerUrl} = {}) {\n    await this.waitForReady()\n    const profile = {}\n\n    if (displayName) {\n      assert(typeof displayName === 'string', 'display name not a string')\n      assert(displayName.length <= 50, `display name '${displayName}' longer than 50 chars`)\n      profile.diplayNameCid = (await this.ipfs.add(displayName)).cid.toString()\n    }\n    if (description) {\n      assert(typeof description === 'string', 'description not a string')\n      assert(description.length <= 140, `description '${description}' longer than 140 chars`)\n      profile.descriptionCid = (await this.ipfs.add(description)).cid.toString()\n    }\n    if (thumbnailUrl) {\n      assert(typeof thumbnailUrl === 'string', 'thumbnail url not a string')\n      assert(thumbnailUrl.startsWith('https://'), `thumbnail url '${thumbnailUrl}' does not start with https://`)\n      assert(thumbnailUrl.length <= 140, `thumbnail url '${thumbnailUrl}' longer than 140 chars`)\n      profile.thumbnailUrlCid = (await this.ipfs.add(thumbnailUrl)).cid.toString()\n    }\n    if (bannerUrl) {\n      assert(typeof bannerUrl === 'string', 'banner url not a string')\n      assert(bannerUrl.startsWith('https://'), `banner url '${bannerUrl}' does not start with https://`)\n      assert(bannerUrl.length <= 140, `banner url '${thumbnailUrl}' longer than 140 chars`)\n      profile.bannerUrlCid = (await this.ipfs.add(bannerUrl)).cid.toString()\n    }\n\n    const profileCid = (await this.ipfs.add(JSON.stringify(profile))).cid.toString()\n\n    const ipnsData = await this.getOwnIpnsData()\n    ipnsData.profileCid = profileCid\n    const newIpnsDataCid = (await this.ipfs.add(JSON.stringify(ipnsData))).cid.toString()\n    await this.publishIpnsRecord(newIpnsDataCid)\n    console.log('editProfile', {displayName, description, thumbnailUrl, bannerUrl, ipnsData, profile, profileCid, newIpnsDataCid})\n\n    return profileCid\n  }\n\n  async getUserProfile (profileCid) {\n    await this.waitForReady()\n    assert(typeof profileCid === 'string', `sav3Ipfs.getUserProfile profileCid '${profileCid}' not a string`)\n    const profileCids = JSON.parse(await this.getIpfsFile(profileCid))\n    const profile = {}\n    if (profileCids.diplayNameCid) {\n      profile.displayName = await this.getIpfsFile(profileCids.diplayNameCid)\n    }\n    if (profileCids.descriptionCid) {\n      profile.description = await this.getIpfsFile(profileCids.descriptionCid)\n    }\n    if (profileCids.thumbnailUrlCid) {\n      profile.thumbnailUrl = await this.getIpfsFile(profileCids.thumbnailUrlCid)\n    }\n    if (profileCids.bannerUrlCid) {\n      profile.bannerUrl = await this.getIpfsFile(profileCids.bannerUrlCid)\n    }\n\n    console.log('getUserProfile', {profileCid, profileCids, profile})\n    return profile\n  }\n\n  async getOwnIpnsRecordSequence () {\n    await this.waitForReady()\n    const ipnsRecord = await this.getOwnIpnsRecord()\n    const sequence = ipnsRecord\n    const ownCid = await sav3Ipfs.getOwnPeerCid()\n    const [remoteIpnsRecord] = await this.ipnsClient.getRecords([ownCid])\n    const remoteSequence = (remoteIpnsRecord && remoteIpnsRecord.sequence) || 0\n    if (sequence > remoteSequence) {\n      return sequence\n    }\n    else {\n      return remoteSequence\n    }\n  }\n\n  async getUserPostsFromLastPostCid (lastPostCid) {\n    await this.waitForReady()\n    assert(lastPostCid && typeof lastPostCid === 'string', `sav3Ipfs.getUserPostsFromLastPostCid lastPostCid '${lastPostCid}' not a string`)\n    const posts = []\n\n    const maxPostCount = 5\n\n    while (true) {\n      // no more last post id so reached the first post by that user\n      if (!lastPostCid) {\n        break\n      }\n      if (posts.length >= maxPostCount) {\n        break\n      }\n\n      const post = await this.getPost(lastPostCid)\n      lastPostCid = post.previousPostCid\n      posts.push(post)\n    }\n\n    console.log('getUserPostsFromLastPostCid', {lastPostCid, posts})\n    return posts\n  }\n\n  async getPost (postCid) {\n    await this.waitForReady()\n    assert(postCid && typeof postCid === 'string', `sav3Ipfs.getPost postCid '${postCid}' not a string`)\n    console.log('getPost', {postCid})\n\n    const post = JSON.parse(await this.getIpfsFile(postCid))\n    post.cid = postCid\n\n    if (post.parentPostCid) {\n      await postRepliesUtils.cachePostReplyCid({cid: post.cid, parentPostCid: post.parentPostCid})\n    }\n\n    post.content = await this.getIpfsFile(post.contentCid)\n    console.log('getPost returns', {postCid, post})\n    return post\n  }\n\n  async getPostRepliesCids (postCid) {\n    await this.waitForReady()\n    assert(postCid && typeof postCid === 'string', `sav3Ipfs.getPostRepliesCids postCid '${postCid}' not a string`)\n    const repliesCids = await postRepliesUtils.getPostRepliesCids(postCid)\n    return repliesCids\n  }\n\n  async getPostReplyCount (postCid) {\n    await this.waitForReady()\n    assert(postCid && typeof postCid === 'string', `sav3Ipfs.getPostReplyCount postCid '${postCid}' not a string`)\n    const repliesCids = await postRepliesUtils.getPostRepliesCids(postCid)\n    return repliesCids.length\n  }\n\n  /**\n   * ipfs has finished initializing and its methods are ready to use\n   *\n   * @returns {boolean}\n   */\n  isReady () {\n    return !!this.ipfs\n  }\n\n  async waitForReady () {\n    if (this.ipfs) {\n      return\n    }\n    await delay(10)\n    await this.waitForReady()\n  }\n}\n\nconst sav3Ipfs = new Sav3Ipfs()\n\n// for testing\nwindow.sav3Ipfs = sav3Ipfs\nwindow.Ipfs = Ipfs\ncreateWindowSav3IpfsTestMethods(sav3Ipfs)\n\n// export a singleton to be used throughout the app\nexport default sav3Ipfs\n","import Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport PropTypes from 'prop-types'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    overflow: 'hidden'\n  }\n}))\n\nfunction Modal ({open, onClose, content, actions} = {}) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'))\n\n  return (\n    <Dialog fullScreen={fullScreen} fullWidth={true} maxWidth='xs' open={open} onClose={onClose}>\n      <Box alignItems='center' display='flex' px={2} height={theme.sav3.topBar.height}>\n        <Box flexGrow={1}>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        {fullScreen && <Box px={1}>{actions}</Box>}\n      </Box>\n      <Divider />\n      <DialogContent className={classes.content}>{content}</DialogContent>\n      {!fullScreen && (\n        <div>\n          <Divider />\n          <Box alignItems='center' display='flex' px={3} height={theme.sav3.topBar.height}>\n            <Box flexGrow={1}></Box>\n            <Box>{actions}</Box>\n          </Box>\n        </div>\n      )}\n    </Dialog>\n  )\n}\n\nModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  content: PropTypes.element.isRequired,\n  actions: PropTypes.element.isRequired\n}\n\nexport default Modal\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\n\nconst useUserIpnsData = (ipnsPath) => {\n  assert(!ipnsPath || typeof ipnsPath === 'string', `invalid ipnsPath '${JSON.stringify(ipnsPath)}'`)\n  const [userIpnsData, setUserIpnsData] = useState()\n  console.log('useUserIpnsData', {ipnsPath, userIpnsData})\n\n  useEffect(() => {\n    if (!ipnsPath) {\n      return\n    }\n\n    // subscribe to future published ipns paths\n    const onPublish = async (newIpnsPath, ipnsValue) => {\n      if (ipnsPath !== newIpnsPath) {\n        // publish event is a different user\n        return\n      }\n      const ipnsData = await sav3Ipfs.getIpfsFile(ipnsValue)\n      setUserIpnsData(JSON.parse(ipnsData))\n    }\n    sav3Ipfs.on('publish', onPublish)\n\n    // get the current ipns path\n    ;(async () => {\n      const ipnsValue = await sav3Ipfs.subscribeToIpnsPath(ipnsPath)\n      if (!ipnsValue) {\n        // user has not published anything yet\n        setUserIpnsData()\n        return\n      }\n      const ipnsData = await sav3Ipfs.getIpfsFile(ipnsValue)\n      setUserIpnsData(JSON.parse(ipnsData))\n    })()\n\n    // unsubscribe after component unmounts\n    return () => {\n      sav3Ipfs.off('publish', onPublish)\n    }\n  }, [ipnsPath])\n\n  return userIpnsData\n}\n\nexport default useUserIpnsData\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\nimport useUserIpnsData from 'src/hooks/use-user-ipns-data'\n\nconst useUserProfile = (userCid) => {\n  assert(!userCid || typeof userCid === 'string', `invalid userCid '${JSON.stringify(userCid)}'`)\n  const defaultUserProfile = {}\n  const [userProfile, setUserProfile] = useState(defaultUserProfile)\n  const userIpnsData = useUserIpnsData(userCid)\n  const profileCid = userIpnsData && userIpnsData.profileCid\n  console.log('useUserProfile', {userIpnsData, userCid, profileCid, userProfile})\n\n  useEffect(() => {\n    if (!profileCid || typeof profileCid !== 'string') {\n      setUserProfile(defaultUserProfile)\n      return\n    }\n    ;(async () => {\n      const userProfile = await sav3Ipfs.getUserProfile(profileCid)\n      setUserProfile(userProfile)\n    })()\n  }, [profileCid])\n\n  return userProfile\n}\n\nexport default useUserProfile\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\n\nconst useOwnUserCid = () => {\n  const [ownUserCid, setOwnUserCid] = useState()\n\n  useEffect(() => {\n    ;(async () => {\n      const ownUserCid = await sav3Ipfs.getOwnUserCid()\n      setOwnUserCid(ownUserCid)\n    })()\n  }, [])\n\n  return ownUserCid\n}\n\nexport default useOwnUserCid\n","import {useState, Fragment} from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport useTranslation from 'src/translations/use-translation'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport PropTypes from 'prop-types'\nimport Alert from '@material-ui/lab/Alert'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Modal from 'src/components/modal'\nimport useUserProfile from 'src/hooks/use-user-profile'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  errorMessage: {\n    overflow: 'hidden'\n  },\n  content: {\n    '& textarea': {\n      overflow: 'hidden'\n    },\n    // remove text input variant borders\n    '& fieldset': {\n      border: 'none'\n    },\n    marginBottom: theme.spacing(1)\n  },\n  avatar: {\n    // slightly higher placement than the user name seems more pleasing\n    marginTop: theme.spacing(-0.25),\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    // borders\n    borderWidth: theme.sav3.borderWidth,\n    borderStyle: 'solid',\n    borderColor: theme.sav3.borderColor\n  },\n  userCid: {\n    wordBreak: 'break-all'\n  }\n}))\n\nfunction PublishPostModal ({open, onClose, parentPost} = {}) {\n  const t = useTranslation()\n  const classes = useStyles()\n  const [content, setContent] = useState('')\n  const [errorMessage, setErrorMessage] = useState()\n\n  const userCid = useOwnUserCid()\n  const profile = useUserProfile(userCid)\n\n  const handleChange = (event) => {\n    let content = event.target.value\n    try {\n      if (content.length > 140) {\n        content = content.subtring(0, 140)\n      }\n      setContent(content)\n    }\n    catch (e) {}\n  }\n\n  const handlePublish = async () => {\n    const parentPostCid = parentPost && parentPost.cid\n\n    try {\n      await sav3Ipfs.publishPost({content, parentPostCid})\n      setErrorMessage(null)\n      setContent('')\n      onClose()\n    }\n    catch (e) {\n      setErrorMessage(e.message)\n    }\n  }\n\n  const modalContent = (\n    <Fragment>\n      {parentPost && <ParentPost parentPost={parentPost} />}\n      <Box display='flex'>\n        <Box pr={1} py={1.5}>\n          <Avatar src={profile.thumbnailUrl} className={classes.avatar} />\n        </Box>\n        <TextField\n          autoFocus\n          className={classes.content}\n          onChange={handleChange}\n          margin='dense'\n          id='content'\n          placeholder={t['Uncensorable content']()}\n          fullWidth\n          multiline\n          rows={4}\n          variant='outlined'\n          value={content}\n        />\n        {errorMessage && (\n          <Alert classes={{message: classes.errorMessage}} severity='error'>\n            {errorMessage}\n          </Alert>\n        )}\n      </Box>\n    </Fragment>\n  )\n\n  const modalActions = (\n    <div>\n      <Button disableElevation variant='contained' onClick={handlePublish} color='primary'>\n        SAV3\n      </Button>\n    </div>\n  )\n\n  return <Modal onClose={onClose} open={open} content={modalContent} actions={modalActions} />\n}\n\nPublishPostModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  parentPost: PropTypes.object\n}\n\nfunction ParentPost ({parentPost} = {}) {\n  const classes = useStyles()\n  return (\n    <Box display='flex'>\n      <Box pr={1} py={1.5}>\n        <Avatar src={parentPost.profile.thumbnailUrl} className={classes.avatar} />\n      </Box>\n      <Box pt={1.5} pl={0.5} flexGrow={1}>\n        {parentPost.profile.displayName && <Typography variant='subtitle2'>{parentPost.profile.displayName}</Typography>}\n        <Typography variant='caption' color='textSecondary' className={classes.userCid}>\n          {parentPost.userCid}\n        </Typography>\n        <Typography variant='body2'>{parentPost.content}</Typography>\n      </Box>\n    </Box>\n  )\n}\n\nexport default PublishPostModal\n","import {useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport HomeIcon from '@material-ui/icons/Home'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport SearchIcon from '@material-ui/icons/Search'\nimport GroupIcon from '@material-ui/icons/Group'\nimport BarChartIcon from '@material-ui/icons/BarChart'\nimport PeersIcon from '@material-ui/icons/Wifi'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport CreateIcon from '@material-ui/icons/Create'\nimport Fab from '@material-ui/core/Fab'\nimport {Link as RouterLink} from 'react-router-dom'\nimport useTranslation from 'src/translations/use-translation'\nimport PublishPostModal from 'src/components/publish-post/modal'\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '1.1em'\n  },\n  logoButton: {\n    height: '2.2em',\n    width: '2.2em'\n  },\n  createTextButtonBox: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  createIconButtonBox: {\n    [theme.breakpoints.up('lg')]: {\n      display: 'none'\n    }\n  },\n  createIconButton: {\n    boxShadow: 'none'\n  },\n  text: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  root: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  }\n}))\n\nfunction LeftMenu () {\n  const classes = useStyles()\n  const t = useTranslation()\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItem button component={RouterLink} to='/'>\n          <ListItemIcon>\n            <HomeIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Home()} className={classes.text} />\n        </ListItem>\n        <ListItem button component={RouterLink} to='/search'>\n          <ListItemIcon>\n            <SearchIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Search()} className={classes.text} />\n        </ListItem>\n        <ListItem button component={RouterLink} to='/following'>\n          <ListItemIcon>\n            <GroupIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Following()} className={classes.text} />\n        </ListItem>\n        <ListItem button component={RouterLink} to='/peers'>\n          <ListItemIcon>\n            <PeersIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Peers()} className={classes.text} />\n        </ListItem>\n        <ListItem button component={RouterLink} to='/stats'>\n          <ListItemIcon>\n            <BarChartIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Stats()} className={classes.text} />\n        </ListItem>\n        <ListItem button component={RouterLink} to='/profile'>\n          <ListItemIcon>\n            <AccountCircle fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Profile()} className={classes.text} />\n        </ListItem>\n        <PublishPostButton />\n      </List>\n    </div>\n  )\n}\n\nfunction PublishPostButton () {\n  const classes = useStyles()\n\n  const [openPublishPostModal, setOpenPublishPostModal] = useState(false)\n  return (\n    <div>\n      <Box my={2} mx={1} alignItems='center' display='flex' className={classes.createTextButtonBox} onClick={() => setOpenPublishPostModal(true)}>\n        <Button fullWidth variant='contained' size='large' disableElevation>\n          SAV3\n        </Button>\n      </Box>\n\n      <Box my={2} pl={1} alignItems='center' display='flex' className={classes.createIconButtonBox} onClick={() => setOpenPublishPostModal(true)}>\n        <Fab className={classes.createIconButton} size='medium'>\n          <CreateIcon />\n        </Fab>\n      </Box>\n\n      <PublishPostModal open={openPublishPostModal} onClose={() => setOpenPublishPostModal(false)} />\n    </div>\n  )\n}\n\nexport default LeftMenu\n","import {useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport Box from '@material-ui/core/Box'\nimport Fab from '@material-ui/core/Fab'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport CreateIcon from '@material-ui/icons/Create'\nimport HomeIcon from '@material-ui/icons/Home'\nimport SearchIcon from '@material-ui/icons/Search'\nimport {Link as RouterLink, useRouteMatch} from 'react-router-dom'\nimport PublishPostModal from 'src/components/publish-post/modal'\nimport BarChartIcon from '@material-ui/icons/BarChart'\nimport PeersIcon from '@material-ui/icons/Wifi'\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    // stick to bottom\n    width: '100%',\n    position: 'fixed',\n    bottom: 0\n  },\n  createIconButtonBox: {\n    right: theme.spacing(4),\n    bottom: theme.spacing(8)\n  },\n  createIconButton: {\n    // boxShadow: 'none'\n  }\n}))\n\nfunction BottomMenu ({className} = {}) {\n  const classes = useStyles()\n  const route = useRouteMatch('/:route')\n  const activeMenu = route && route.params && route.params.route ? route.params.route : 'home'\n\n  return (\n    <Box className={className}>\n      <BottomNavigation value={activeMenu} className={classes.menu}>\n        <PublishPostButton />\n        <BottomNavigationAction component={RouterLink} to='/' value='home' icon={<HomeIcon />} />\n        <BottomNavigationAction component={RouterLink} to='/search' value='search' icon={<SearchIcon />} />\n        <BottomNavigationAction component={RouterLink} to='/peers' value='peers' icon={<PeersIcon />} />\n        <BottomNavigationAction component={RouterLink} to='/stats' value='stats' icon={<BarChartIcon />} />\n      </BottomNavigation>\n      {/* give real height to fixed bottom nav */}\n      <Box width={0} className='MuiBottomNavigation-root' />\n    </Box>\n  )\n}\n\nfunction PublishPostButton () {\n  const classes = useStyles()\n\n  const [openPublishPostModal, setOpenPublishPostModal] = useState(false)\n  return (\n    <Box position='absolute' className={classes.createIconButtonBox}>\n      <Box my={2} pl={1} alignItems='center' display='flex' className={classes.createIconButton} onClick={() => setOpenPublishPostModal(true)}>\n        <Fab className={classes.createIconButton} size='large'>\n          <CreateIcon />\n        </Fab>\n      </Box>\n\n      <PublishPostModal open={openPublishPostModal} onClose={() => setOpenPublishPostModal(false)} />\n    </Box>\n  )\n}\n\nexport default BottomMenu\n","import merge from 'lodash.merge'\nimport {createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles'\n\n// use neutral grey border color so it looks OK on\n// both light and dark theme\n// default borders and dividers are too opaque\nconst borderColor = 'rgb(127, 127, 127, 0.05)'\n\n// regular top bar is too big\nconst topBarHeight = 54\n\nconst baseMuiThemeOptions = {\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 682,\n      md: 960,\n      lg: 1280,\n      xl: 1920\n    }\n  },\n  sav3: {\n    layout: {\n      columns: {\n        left: {\n          width: {\n            md: 275,\n            // sm width is never used but might be useful someday\n            sm: 88,\n            xs: 68\n          }\n        },\n        middle: {\n          width: {\n            md: 600\n          }\n        },\n        right: {\n          width: {\n            lg: 350,\n            md: 290\n          }\n        }\n      }\n    },\n    borderWidth: 1,\n    borderColor,\n    topBar: {\n      height: topBarHeight\n    },\n    drawerMenu: {\n      width: 280\n    },\n    popoverMenu: {\n      // small popover menus are too rounded\n      borderRadius: 4\n    }\n  },\n  palette: {\n    divider: borderColor\n  },\n  shape: {\n    // buttons are not rounded enough\n    borderRadius: 24\n  },\n  overrides: {\n    MuiToolbar: {\n      root: {\n        // top bar is too wide\n        minHeight: `${topBarHeight}px!important`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        margin: 0\n      },\n      paperFullWidth: {\n        // regular full width has padding on mobile\n        width: '100%'\n      }\n    },\n    MuiSvgIcon: {\n      fontSizeLarge: {\n        // left menu icons are too big\n        fontSize: '1.8rem'\n      }\n    },\n    MuiFab: {\n      root: {\n        // default box shadow is too intense\n        boxShadow: 'rgba(101, 119, 134, 0.2) 0px 0px 8px, rgba(101, 119, 134, 0.25) 0px 1px 3px 1px'\n      }\n    }\n  }\n}\n\nconst createTheme = (muiThemeOptions) => {\n  let theme = createMuiTheme(merge({}, baseMuiThemeOptions, muiThemeOptions))\n  theme = responsiveFontSizes(theme)\n  return theme\n}\n\nexport default createTheme\n","import light from './themes/light'\nimport dark from './themes/dark'\nimport sav3Light from './themes/sav3-light'\n\nconst themes = {\n  Light: light,\n  Dark: dark,\n  'SAV3 Light': sav3Light\n}\nObject.freeze(themes)\n\nexport default themes\n","import createTheme from '../create-theme'\n\nconst theme = createTheme()\n\nexport default theme\n","import createTheme from '../create-theme'\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n})\n\nexport default theme\n","import createTheme from '../create-theme'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#7a7380',\n      main: '#4e4854',\n      dark: '#26212b'\n    },\n    secondary: {\n      // grey\n      // main: '#a9a7a8',\n      // blue\n      main: '#484854'\n    }\n  }\n})\n\nexport default theme\n","import {useState, createContext} from 'react'\nimport {ThemeProvider as MuiThemeProvider} from '@material-ui/core/styles'\nimport themes from './index'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nexport const ThemeContext = createContext({\n  theme: 'Light',\n  setTheme: null\n})\n\nconst ThemeProvider = (props) => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const defaultThemeName = prefersDarkMode ? 'Dark' : 'Light'\n  let localStorageThemeName = localStorage.getItem('muiTheme') || defaultThemeName\n  if (!themes[localStorageThemeName]) {\n    console.warn(`no available theme for '${localStorageThemeName}'`)\n    localStorageThemeName = defaultThemeName\n  }\n\n  // State to hold the selected theme name\n  const [themeName, _setThemeName] = useState(localStorageThemeName)\n\n  // Retrieve the theme object by theme name\n  const theme = themes[themeName]\n\n  // Wrap _setThemeName to store new theme names in localStorage\n  const setThemeName = (themeName) => {\n    if (!themes[themeName]) {\n      console.warn(`no available theme for '${themeName}'`)\n      return\n    }\n    localStorage.setItem('muiTheme', themeName)\n    _setThemeName(themeName)\n  }\n\n  const contextValue = {\n    theme: themeName,\n    setTheme: setThemeName\n  }\n\n  const {children} = props\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default ThemeProvider\n","import {ThemeContext} from 'src/themes/theme-provider'\nimport {useContext} from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport themes from 'src/themes'\n\nfunction ThemeSwitcher () {\n  const {theme, setTheme} = useContext(ThemeContext)\n  const handleThemeChange = (event) => {\n    setTheme(event.target.value)\n  }\n  const themeMenuItems = []\n  for (const themeName in themes) {\n    themeMenuItems.push(\n      <MenuItem key={themeName} value={themeName}>\n        {themeName}\n      </MenuItem>\n    )\n  }\n\n  return (\n    <Select value={theme} onChange={handleThemeChange} label='Theme' variant='outlined'>\n      {themeMenuItems}\n    </Select>\n  )\n}\n\nexport default ThemeSwitcher\n","import {LanguageCodeContext} from 'src/translations/language-code-provider'\nimport {useContext} from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport translations from 'src/translations'\n\nfunction TranslationSwitcher () {\n  const {languageCode, setLanguageCode} = useContext(LanguageCodeContext)\n  const handleTranslationChange = (event) => {\n    setLanguageCode(event.target.value)\n  }\n  const translationMenuItems = []\n  for (const translationName in translations) {\n    translationMenuItems.push(\n      <MenuItem key={translationName} value={translationName}>\n        {translationName}\n      </MenuItem>\n    )\n  }\n\n  return (\n    <Select value={languageCode} onChange={handleTranslationChange} label='Translation' variant='outlined'>\n      {translationMenuItems}\n    </Select>\n  )\n}\n\nexport default TranslationSwitcher\n","import {makeStyles} from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport MuiAppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.background.default\n  },\n  // default material ui sticky app bar doesn't stick unless it's at the top of dom\n  // and has a weird shaking bug when scrolling in chrome\n  appBarSticky: {\n    position: 'fixed',\n    left: 'auto',\n    right: 'auto',\n    [theme.breakpoints.up('xs')]: {\n      width: theme.sav3.layout.columns.middle.width.md - theme.sav3.borderWidth * 2\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: `calc(100% - ${theme.sav3.borderWidth * 2}px)`\n    }\n  },\n  // position fixed makes the height 0\n  appBarStickyAfter: {\n    height: theme.sav3.topBar.height + theme.sav3.borderWidth\n  }\n}))\n\nfunction TopBar ({children}) {\n  const classes = useStyles()\n  return (\n    <div>\n      <MuiAppBar position='sticky' color='transparent' elevation={0} classes={{positionSticky: classes.appBarSticky}} className={classes.appBar}>\n        <Toolbar disableGutters>{children}</Toolbar>\n        <Divider />\n      </MuiAppBar>\n      <div className={classes.appBarStickyAfter}></div>\n    </div>\n  )\n}\n\nexport default TopBar\n","import {useContext} from 'react'\nimport {LanguageCodeContext} from './language-code-provider'\n\nconst useLanguageCode = () => {\n  const {languageCode} = useContext(LanguageCodeContext)\n  return languageCode\n}\n\nexport default useLanguageCode\n","import * as localForage from 'localforage'\nimport assert from 'assert'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\n\nclass FollowManager {\n  constructor () {\n    this.followingCache = localForage.createInstance({\n      name: 'followingCache'\n    })\n    this.blockedCache = localForage.createInstance({\n      name: 'blockedCache'\n    })\n  }\n\n  async addFollowing (userCid) {\n    assert(typeof userCid === 'string', `FollowManager.addFollowing invalid userCid '${userCid}'`)\n    await this.deleteBlocked(userCid)\n    await this.followingCache.setItem(userCid, true)\n    sav3Ipfs.setFollowing(await this.getAllFollowing())\n  }\n\n  async isFollowing (userCid) {\n    assert(typeof userCid === 'string', `FollowManager.isFollowing invalid userCid '${userCid}'`)\n    const res = await this.followingCache.getItem(userCid)\n    return !!res\n  }\n\n  async deleteFollowing (userCid) {\n    assert(typeof userCid === 'string', `FollowManager.deleteFollowing invalid userCid '${userCid}'`)\n    await this.followingCache.removeItem(userCid)\n    sav3Ipfs.setFollowing(await this.getAllFollowing())\n  }\n\n  getAllFollowing () {\n    return this.followingCache.keys()\n  }\n\n  async setAllFollowing (userCids) {\n    assert(Array.isArray(userCids), `FollowManager.setAllFollowing invalid userCids '${userCids}'`)\n    await this.followingCache.clear()\n    for (const userCid of userCids) {\n      await this.addFollowing(userCid)\n    }\n    sav3Ipfs.setFollowing(await this.getAllFollowing())\n  }\n\n  async addBlocked (userCid) {\n    assert(typeof userCid === 'string', `FollowManager.addBlocked invalid userCid '${userCid}'`)\n    await this.deleteFollowing(userCid)\n    await this.blockedCache.setItem(userCid, true)\n  }\n\n  async isBlocked (userCid) {\n    assert(typeof userCid === 'string', `FollowManager.isBlocked invalid userCid '${userCid}'`)\n    const res = await this.blockedCache.getItem(userCid)\n    return !!res\n  }\n\n  async deleteBlocked (userCid) {\n    assert(typeof userCid === 'string', `FollowManager.deleteBlocked invalid userCid '${userCid}'`)\n    await this.blockedCache.removeItem(userCid)\n  }\n\n  getAllBlocked () {\n    return this.blockedCache.keys()\n  }\n\n  async setAllBlocked (userCids) {\n    assert(Array.isArray(userCids), `FollowManager.setAllBlocked invalid userCids '${userCids}'`)\n    await this.blockedCache.clear()\n    for (const userCid of userCids) {\n      await this.addBlocked(userCid)\n    }\n  }\n}\n\n// export a singleton to be used throughout the app\nconst followManager = new FollowManager()\nexport default followManager\n\n// for testing\nwindow.followManager = followManager\n","import {createContext, useState, useEffect} from 'react'\nimport followManager from 'src/lib/follow-manager'\nimport assert from 'assert'\n\nexport const FollowingContext = createContext()\n\nconst FollowingProvider = (props) => {\n  // get initial following/blocked cids from cache\n  const [following, setFollowing] = useState({})\n  const [blocked, setBlocked] = useState({})\n  useEffect(() => {\n    ;(async () => {\n      const following = await followManager.getAllFollowing()\n      const blocked = await followManager.getAllBlocked()\n      const followingObject = {}\n      for (const userCid of following) {\n        followingObject[userCid] = true\n      }\n      setFollowing(followingObject)\n      const blockedObject = {}\n      for (const userCid of blocked) {\n        blockedObject[userCid] = true\n      }\n      setBlocked(blockedObject)\n    })()\n  }, [])\n\n  const addFollowing = (userCid) => {\n    assert(typeof userCid === 'string', `FollowingProvider.addFollowing invalid userCid '${userCid}'`)\n    followManager.addFollowing(userCid)\n    setFollowing((prevFollowing) => ({\n      ...prevFollowing,\n      [userCid]: true\n    }))\n  }\n\n  const deleteFollowing = (userCid) => {\n    assert(typeof userCid === 'string', `FollowingProvider.deleteFollowing invalid userCid '${userCid}'`)\n    followManager.deleteFollowing(userCid)\n    setFollowing((prevFollowing) => ({\n      ...prevFollowing,\n      [userCid]: false\n    }))\n  }\n\n  const setAllFollowing = (userCids) => {\n    assert(Array.isArray(userCids), `FollowingProvider.setAllFollowing invalid userCids '${userCids}'`)\n    followManager.setAllFollowing(userCids)\n    const userCidsObject = {}\n    for (const userCid of userCids) {\n      userCidsObject[userCid] = true\n    }\n    setFollowing(userCidsObject)\n  }\n\n  const addBlocked = (userCid) => {\n    assert(typeof userCid === 'string', `FollowingProvider.addBlocked invalid userCid '${userCid}'`)\n    followManager.addBlocked(userCid)\n    setBlocked((prevBlocked) => ({\n      ...prevBlocked,\n      [userCid]: true\n    }))\n  }\n\n  const deleteBlocked = (userCid) => {\n    assert(typeof userCid === 'string', `FollowingProvider.deleteBlocked invalid userCid '${userCid}'`)\n    followManager.deleteBlocked(userCid)\n    setBlocked((prevBlocked) => ({\n      ...prevBlocked,\n      [userCid]: false\n    }))\n  }\n\n  const setAllBlocked = (userCids) => {\n    assert(Array.isArray(userCids), `FollowingProvider.setAllBlocked invalid userCids '${userCids}'`)\n    followManager.setAllBlocked(userCids)\n    const userCidsObject = {}\n    for (const userCid of userCids) {\n      userCidsObject[userCid] = true\n    }\n    setBlocked(userCidsObject)\n  }\n\n  const contextValue = {\n    following,\n    addFollowing,\n    deleteFollowing,\n    setAllFollowing,\n    blocked,\n    addBlocked,\n    deleteBlocked,\n    setAllBlocked\n  }\n\n  const {children} = props\n  return <FollowingContext.Provider value={contextValue}>{children}</FollowingContext.Provider>\n}\n\nexport default FollowingProvider\n","import {useContext, useCallback} from 'react'\nimport {FollowingContext} from './following-provider'\nimport assert from 'assert'\n\nconst useIsFollowing = (userCid) => {\n  assert(!userCid || typeof userCid === 'string', `useIsFollowing invalid userCid '${userCid}'`)\n  const {following, addFollowing, deleteFollowing} = useContext(FollowingContext)\n  const isFollowing = !!following[userCid]\n\n  const setIsFollowing = useCallback(\n    (value) => {\n      if (!userCid) {\n        return\n      }\n      assert(typeof value === 'boolean', `setIsFollowing invalid value '${value}' not a boolean`)\n      if (value === true) {\n        addFollowing(userCid)\n      }\n      if (value === false) {\n        deleteFollowing(userCid)\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [userCid]\n  )\n\n  if (!userCid) {\n    return [undefined, setIsFollowing]\n  }\n  return [isFollowing, setIsFollowing]\n}\n\nexport default useIsFollowing\n","import {useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport PersonAdd from '@material-ui/icons/PersonAdd'\nimport PersonAddDisabled from '@material-ui/icons/PersonAddDisabled'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport PropTypes from 'prop-types'\nimport useIsFollowing from 'src/hooks/following/use-is-following'\nimport useTranslation from 'src/translations/use-translation'\nimport Box from '@material-ui/core/Box'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    '& .MuiPaper-rounded': {\n      borderRadius: theme.sav3.popoverMenu.borderRadius\n    }\n  },\n  menuItemIcon: {\n    minWidth: 28\n  },\n  moreIconButton: {\n    padding: theme.spacing(0.5),\n    '& .MuiSvgIcon-root': {\n      fontSize: '1.2rem'\n    }\n  }\n}))\n\nfunction PostMoreMenu ({post} = {}) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState(null)\n  const ownCid = useOwnUserCid()\n\n  if (post.userCid === ownCid) {\n    // currently no more menu for own posts\n    // return empty element same size as more button\n    return <Box height={48} width={48} />\n  }\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div onClick={(event) => event.stopPropagation()}>\n      <IconButton className={classes.moreIconButton} onClick={handleClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        className={classes.menu}\n        elevation={4}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <FollowMenuItem userCid={post.userCid} />\n      </Menu>\n    </div>\n  )\n}\n\nPostMoreMenu.propTypes = {\n  post: PropTypes.object.isRequired\n}\n\nfunction FollowMenuItem ({userCid} = {}) {\n  const classes = useStyles()\n  const t = useTranslation()\n  const [isFollowing, setIsFollowing] = useIsFollowing(userCid)\n\n  let followButton = (\n    <MenuItem onClick={() => setIsFollowing(true)}>\n      <ListItemIcon className={classes.menuItemIcon}>\n        <PersonAdd fontSize='small' />\n      </ListItemIcon>\n      <Typography>{t.Follow()}</Typography>\n    </MenuItem>\n  )\n  if (isFollowing) {\n    followButton = (\n      <MenuItem onClick={() => setIsFollowing(false)}>\n        <ListItemIcon className={classes.menuItemIcon}>\n          <PersonAddDisabled fontSize='small' />\n        </ListItemIcon>\n        <Typography>{t.Unfollow()}</Typography>\n      </MenuItem>\n    )\n  }\n  return followButton\n}\n\nFollowMenuItem.propTypes = {\n  userCid: PropTypes.string.isRequired\n}\n\nexport default PostMoreMenu\n","import assert from 'assert'\nimport config from 'src/config'\n\nconst timeToLive = config.urlTimeToLive\nassert(typeof timeToLive === 'number', `invalid permalink time to live '${timeToLive}'`)\n\nexport const decodeCid = (encodedCid) => {\n  assert(encodedCid && typeof encodedCid === 'string', `utils.url.decodeCid encodedCid '${encodedCid}' not a string`)\n  let cid, expireTimestamp\n  try {\n    const object = JSON.parse(window.atob(encodedCid))\n    cid = object.c\n    expireTimestamp = object.e\n  }\n  catch (e) {\n    throw Error(`failed decoding cid: ${e.message}`)\n  }\n\n  if (expireTimestamp * 1000 < Date.now()) {\n    throw Error(`encoded cid '${cid}' expired ${new Date(expireTimestamp * 1000)}`)\n  }\n  if (expireTimestamp * 1000 - timeToLive >= Date.now()) {\n    throw Error(`encoded cid '${cid}' too early '${new Date(expireTimestamp * 1000)}' '${new Date()}'`)\n  }\n  return cid\n}\n\nexport const encodeCid = (cid) => {\n  assert(cid && typeof cid === 'string', `utils.url.encodeCid cid '${cid}' not a string`)\n  const expireTimestamp = Math.round((Date.now() + timeToLive) / 1000)\n  return window.btoa(JSON.stringify({c: cid, e: expireTimestamp})).replace(/=/g, '')\n}\n\nexport const encodedCidIsExpired = (encodedCid) => {\n  try {\n    decodeCid(encodedCid)\n    return false\n  }\n  catch (e) {\n    console.log(e)\n    return true\n  }\n}\n\nexport default {\n  decodeCid,\n  encodeCid,\n  encodedCidIsExpired\n}\n","import {useEffect, useRef} from 'react'\n\nconst noop = () => {}\n\nexport function useInterval (callback, delay, immediate = true) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","import {useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\nimport useInterval from 'src/hooks/utils/use-interval'\n\nconst usePostRepliesCids = (postCid) => {\n  assert(!postCid || typeof postCid === 'string', `invalid postCid '${JSON.stringify(postCid)}'`)\n  const [repliesCids, setRepliesCids] = useState([])\n\n  useInterval(() => {\n    if (!postCid) {\n      setRepliesCids([])\n      return\n    }\n    ;(async () => {\n      const repliesCids = await sav3Ipfs.getPostRepliesCids(postCid)\n      setRepliesCids(repliesCids)\n    })()\n  }, 1000)\n\n  return repliesCids\n}\n\nexport default usePostRepliesCids\n","import copy from 'copy-to-clipboard'\nimport {useCallback, useEffect, useState} from 'react'\n\nexport default function useCopyClipboard (timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n    return undefined\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n","import {Fragment, useEffect, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport FavoriteIcon from '@material-ui/icons/FavoriteBorderOutlined'\nimport ShareIcon from '@material-ui/icons/ShareOutlined'\nimport RepeatIcon from '@material-ui/icons/Repeat'\nimport CommentIcon from '@material-ui/icons/ModeCommentOutlined'\nimport Link from '@material-ui/core/Link'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport {format as formatTimeAgo} from 'timeago.js'\nimport useLanguageCode from 'src/translations/use-language-code'\nimport assert from 'assert'\nimport urlRegex from 'url-regex'\nimport PostMoreMenu from './more-menu'\nimport {Link as RouterLink, useHistory, useLocation} from 'react-router-dom'\nimport PublishPostModal from 'src/components/publish-post/modal'\nimport PropTypes from 'prop-types'\nimport urlUtils from 'src/lib/utils/url'\nimport usePostRepliesCids from 'src/hooks/use-post-replies-cids'\nimport useCopyClipboard from 'src/hooks/utils/use-copy-clipboard'\nimport useTranslation from 'src/translations/use-translation'\n\nconst useStyles = makeStyles((theme) => ({\n  imgMedia: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  },\n  avatar: {\n    // slightly higher placement than the user name seems more pleasing\n    marginTop: theme.spacing(-0.25),\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    // borders\n    borderWidth: theme.sav3.borderWidth,\n    borderStyle: 'solid',\n    borderColor: theme.sav3.borderColor\n  },\n  userCid: {\n    wordBreak: 'break-all',\n    // remove added styles from link component\n    textDecoration: 'inherit'\n  },\n  displayName: {\n    // remove added styles from link component\n    color: 'inherit',\n    textDecoration: 'inherit'\n  },\n  contentLink: {\n    wordBreak: 'break-all'\n  },\n  actions: {\n    paddingTop: theme.spacing(0.5),\n    maxWidth: theme.sav3.layout.columns.middle.width.md * 0.75,\n    marginLeft: theme.spacing(-1)\n  },\n  actionIconButton: {\n    padding: theme.spacing(1),\n    '& .MuiSvgIcon-root': {\n      fontSize: '1rem',\n      color: theme.palette.text.secondary\n    }\n  },\n  post: {\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: rgbaOpacity(theme.palette.action.hover, 0.4)\n    },\n    // prevent mobile highlight entire post when clicking inner elements\n    tapHighlightColor: 'rgba(0, 0, 0, 0)',\n    userSelect: 'none'\n  }\n}))\n\nconst rgbaOpacity = (rgbaString, factor) => {\n  const [r, g, b, a] = rgbaString.match(/[\\d.]+/g)\n  return `rgba(${r}, ${g}, ${b}, ${(a * factor).toFixed(3)})`\n}\n\nfunction Post ({post} = {}) {\n  const location = useLocation()\n  const history = useHistory()\n  const languageCode = useLanguageCode()\n  const classes = useStyles()\n  const date = useDate(post.timestamp, languageCode)\n\n  const encodedUserCid = urlUtils.encodeCid(post.userCid)\n  const userProfileUrl = `/profile/${encodedUserCid}`\n\n  const encodedPostCid = urlUtils.encodeCid(post.cid)\n  const postUrl = `/post/${encodedPostCid}`\n  const navigateToPostUrl = (event) => {\n    // don't handle buttons and links\n    if (!event.target.tagName.match(/DIV|P/)) {\n      return\n    }\n\n    // dont click if already on the same post cid\n    const [, route, encodedCid] = location.pathname.split('/')\n    if (route === 'post') {\n      try {\n        const currentUrlPostCid = urlUtils.decodeCid(encodedCid)\n        if (currentUrlPostCid === post.cid) {\n          return\n        }\n      }\n      catch (e) {}\n    }\n\n    history.push(postUrl)\n  }\n\n  return (\n    <Box px={2} pt={1.5} pb={0.5} display='flex' className={classes.post} onClick={navigateToPostUrl}>\n      {/* left col avatar */}\n      <Box pr={1.5}>\n        <Avatar component={RouterLink} to={userProfileUrl} src={post.profile.thumbnailUrl && forceHttps(post.profile.thumbnailUrl)} className={classes.avatar} />\n      </Box>\n\n      {/* right col header + content + bottom actions */}\n      <Box width='100%'>\n        {/* header */}\n        <Box display='flex'>\n          <Box flexGrow={1}>\n            <Box display='flex'>\n              {post.profile.displayName && (\n                <Fragment>\n                  <Typography className={classes.displayName} component={RouterLink} to={userProfileUrl} variant='subtitle2'>\n                    {post.profile.displayName}\n                  </Typography>\n                  &nbsp;\n                  <Typography variant='subtitle2'>·</Typography>\n                  &nbsp;\n                </Fragment>\n              )}\n              <Typography variant='subtitle2'>{date}</Typography>\n            </Box>\n            <Box>\n              <Typography component={RouterLink} to={userProfileUrl} variant='caption' color='textSecondary' className={classes.userCid}>\n                {post.userCid}\n              </Typography>\n            </Box>\n          </Box>\n          <Box>\n            <PostMoreMenu post={post} />\n          </Box>\n        </Box>\n\n        {/* content */}\n        <PostContent content={post.content} />\n\n        {/* actions */}\n        <Box display='flex' justifyContent='space-between' className={classes.actions}>\n          <ReplyIconButton parentPost={post} />\n          <IconButton className={classes.actionIconButton}>\n            <RepeatIcon style={{transform: 'rotate(90deg)'}} />\n          </IconButton>\n          <IconButton className={classes.actionIconButton}>\n            <FavoriteIcon />\n          </IconButton>\n          <ShareButton postCid={post.cid} />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nfunction ReplyIconButton ({parentPost} = {}) {\n  const classes = useStyles()\n  const postRepliesCids = usePostRepliesCids(parentPost.cid)\n\n  const [openPublishPostModal, setOpenPublishPostModal] = useState(false)\n  return (\n    <Box display='flex' alignItems='center' onClick={(event) => event.stopPropagation()}>\n      <IconButton className={classes.actionIconButton} onClick={() => setOpenPublishPostModal(true)}>\n        <CommentIcon />\n      </IconButton>\n      {postRepliesCids.length !== 0 && <Typography variant='caption'>{postRepliesCids.length}</Typography>}\n      <PublishPostModal parentPost={parentPost} open={openPublishPostModal} onClose={() => setOpenPublishPostModal(false)} />\n    </Box>\n  )\n}\nReplyIconButton.propTypes = {parentPost: PropTypes.object.isRequired}\n\nfunction ShareButton ({postCid} = {}) {\n  const classes = useStyles()\n  const t = useTranslation()\n  const [isCopied, setCopied] = useCopyClipboard(1100)\n  const getUrl = () => {\n    const encodedPostCid = urlUtils.encodeCid(postCid)\n    return `${window.location.origin}/#/post/${encodedPostCid}`\n  }\n  return (\n    <Tooltip title={t['Copied to clipboard']()} open={isCopied} enterDelay={500} leaveDelay={200}>\n      <IconButton onClick={() => setCopied(getUrl())} className={classes.actionIconButton}>\n        <ShareIcon />\n      </IconButton>\n    </Tooltip>\n  )\n}\nShareButton.propTypes = {postCid: PropTypes.string.isRequired}\n\nfunction PostContent ({content} = {}) {\n  const classes = useStyles()\n  let contentComponents = [content]\n\n  const link = getPostContentLink(content)\n  if (link) {\n    const [contentPart1, contentPart2] = content.split(link)\n    let href = link\n    if (!link.match(/^https?:\\/\\//)) {\n      href = `https://${link}`\n    }\n    contentComponents = []\n    if (contentPart1) {\n      contentComponents.push(contentPart1)\n    }\n    contentComponents.push(\n      <Link className={classes.contentLink} key='content link' variant='body2' href={href} target='_blank' rel='noopener'>\n        {link}\n      </Link>\n    )\n    if (contentPart2) {\n      contentComponents.push(contentPart2)\n    }\n  }\n\n  const mediaSrc = getPostContentMediaSrc(content)\n  let cardMedia\n  if (mediaSrc) {\n    cardMedia = <CardMedia className={classes.imgMedia} image={mediaSrc} />\n    if (linkIsVideo(mediaSrc)) {\n      cardMedia = <CardMedia controls autoPlay muted component='video' image={mediaSrc} />\n    }\n  }\n\n  const media = mediaSrc && (\n    <Box pt={1}>\n      <Card variant='outlined'>{cardMedia}</Card>\n    </Box>\n  )\n\n  return (\n    <Box>\n      <Typography variant='body2'>{contentComponents}</Typography>\n      {media}\n    </Box>\n  )\n}\nPostContent.propTypes = {content: PropTypes.string.isRequired}\n\n// only use the first link in a post\nconst getPostContentLink = (content) => {\n  if (!content) {\n    return\n  }\n  assert(typeof content === 'string', `post content '${content}' is not a string`)\n  const links = content.match(urlRegex({strict: false}))\n  return links && links[0]\n}\n\nconst getPostContentMediaSrc = (content) => {\n  if (!content) {\n    return\n  }\n  assert(typeof content === 'string', `post content '${content}' is not a string`)\n  const links = content.match(urlRegex({strict: false}))\n  let link = links && links[0]\n  if (!link) {\n    return\n  }\n  link = forceHttps(link)\n  if (linkIsMedia(link)) {\n    // add protocol if missing\n    if (!link.match(/^https?:\\/\\//)) {\n      link = `https://${link}`\n    }\n    return link\n  }\n}\n\nconst forceHttps = (link) => {\n  assert(typeof link === 'string', `forceHttps link '${link}' not a string`)\n  link = link.trim()\n  link = link.replace(/^http:\\/\\//, 'https://')\n  return link\n}\n\nconst linkIsVideo = (link) => {\n  // remove query string and match extension\n  return link.replace(/[#?].*/).match(/\\.(mp4|webm)$/)\n}\n\nconst linkIsMedia = (link) => {\n  // remove query string and match extension\n  return link.replace(/[#?].*/).match(/\\.(jpeg|jpg|png|gif|mp4|webm)$/)\n}\n\nconst useDate = (timestamp, languageCode) => {\n  const [date, setDate] = useState()\n  useEffect(() => {\n    const date = formatDate(timestamp, languageCode)\n    setDate(date)\n  }, [timestamp, languageCode])\n\n  return date\n}\n\nconst formatDate = (postTimestamp, languageCode) => {\n  const day = 1000 * 60 * 60 * 24\n  const year = 365 * day\n  const timestamp = postTimestamp * 1000\n  let date = new Date(timestamp).toLocaleString(languageCode, {month: 'short', day: 'numeric'})\n  if (Date.now() > timestamp + year) {\n    date = new Date(timestamp).toLocaleString(languageCode, {year: 'numeric', month: 'short', day: 'numeric'})\n  }\n  if (Date.now() < timestamp + day) {\n    date = formatTimeAgo(timestamp, languageCode)\n  }\n  return date\n}\n\nexport default Post\n","import React from 'react'\nimport Post from 'src/components/post'\nimport Divider from '@material-ui/core/Divider'\nimport PropTypes from 'prop-types'\n\nfunction PostsFeed ({posts} = {}) {\n  const postComponents = []\n\n  for (const post of posts) {\n    postComponents.push(<Post post={post} key={post.contentCid + post.timestamp} />)\n    postComponents.push(<Divider key={post.contentCid + post.timestamp + 'feed divider'} />)\n  }\n\n  return <div>{postComponents}</div>\n}\n\nPostsFeed.propTypes = {\n  posts: PropTypes.array.isRequired\n}\n\nexport default PostsFeed\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\nimport useUserIpnsData from 'src/hooks/use-user-ipns-data'\nimport useUserProfile from 'src/hooks/use-user-profile'\n\nconst useUserPosts = (userCid) => {\n  assert(!userCid || typeof userCid === 'string', `invalid userCid '${JSON.stringify(userCid)}'`)\n  const defaultUserPosts = []\n  const [userPosts, setUserPosts] = useState(defaultUserPosts)\n  const userIpnsData = useUserIpnsData(userCid)\n  const profile = useUserProfile(userCid)\n  const lastPostCid = userIpnsData && userIpnsData.lastPostCid\n  console.log('useUserPosts', {userIpnsData, userCid, userPosts})\n\n  useEffect(() => {\n    if (!lastPostCid || typeof lastPostCid !== 'string') {\n      setUserPosts(defaultUserPosts)\n      return\n    }\n    ;(async () => {\n      const posts = await sav3Ipfs.getUserPostsFromLastPostCid(lastPostCid)\n      for (const i in posts) {\n        posts[i].profile = profile || {}\n      }\n      setUserPosts(posts)\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastPostCid, JSON.stringify(profile)])\n\n  return userPosts\n}\n\nexport default useUserPosts\n","import Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport assert from 'assert'\nimport urlRegex from 'url-regex'\nimport PropTypes from 'prop-types'\n\nfunction Description ({description} = {}) {\n  let descriptionComponents = [description]\n\n  const link = getContentLink(description)\n  if (link) {\n    const [descriptionPart1, descriptionPart2] = description.split(link)\n    let href = link\n    if (!link.match(/$https?:\\/\\//)) {\n      href = `https://${link}`\n    }\n    descriptionComponents = []\n    if (descriptionPart1) {\n      descriptionComponents.push(descriptionPart1)\n    }\n    descriptionComponents.push(\n      <Link variant='body2' href={href} target='_blank' rel='noopener'>\n        {link}\n      </Link>\n    )\n    if (descriptionPart2) {\n      descriptionComponents.push(descriptionPart2)\n    }\n  }\n\n  return <Typography variant='body2'>{descriptionComponents}</Typography>\n}\n\nDescription.propTypes = {\n  description: PropTypes.string.isRequired\n}\n\n// only use the first link in a description\nconst getContentLink = (description) => {\n  if (!description) {\n    return\n  }\n  assert(typeof description === 'string', `user description '${description}' is not a string`)\n  const links = description.match(urlRegex({strict: false}))\n  return links && links[0]\n}\n\nexport default Description\n","import {useState, useEffect} from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Box from '@material-ui/core/Box'\nimport useTranslation from 'src/translations/use-translation'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport PropTypes from 'prop-types'\nimport Alert from '@material-ui/lab/Alert'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Modal from 'src/components/modal'\n\nconst useStyles = makeStyles((theme) => ({\n  errorMessage: {\n    overflow: 'hidden'\n  },\n  description: {\n    '& textarea': {\n      overflow: 'hidden'\n    }\n  },\n  content: {\n    '& input': {\n      padding: theme.spacing(2),\n      paddingLeft: theme.spacing(2.5),\n      paddingRight: theme.spacing(2.5)\n    },\n    '& label[data-shrink=\"false\"]': {\n      transform: 'translate(20px, 18px) scale(1)'\n    },\n    '& textarea': {\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n      paddingLeft: theme.spacing(0.5),\n      paddingRight: theme.spacing(0.5)\n    },\n    // text fields borders are too opaque\n    '& fieldset': {\n      opacity: 0.25\n    },\n    '& .Mui-focused fieldset': {\n      opacity: 1\n    }\n  }\n}))\n\nfunction EditProfileModal ({open, onClose, previousProfile}) {\n  const t = useTranslation()\n  const classes = useStyles()\n  const [profile, setProfile] = useState(previousProfile)\n  const [errorMessage, setErrorMessage] = useState()\n\n  // set previous profile once\n  useEffect(() => {\n    setProfile(previousProfile)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(previousProfile)])\n\n  const handleChange = (event) => {\n    const {id, value} = event.target\n    const newProfile = {...profile, [id]: value}\n    setProfile(newProfile)\n  }\n\n  const handlePublish = async () => {\n    try {\n      await sav3Ipfs.editUserProfile(profile)\n      setErrorMessage(null)\n      onClose()\n    }\n    catch (e) {\n      setErrorMessage(e.message)\n    }\n  }\n\n  const content = (\n    <Box pt={1} pb={1.5} className={classes.content}>\n      <TextField onChange={handleChange} autoFocus margin='dense' id='displayName' label={t['Display name']()} fullWidth variant='outlined' value={profile.displayName || ''} />\n      <TextField onChange={handleChange} margin='dense' id='thumbnailUrl' label={t['Thumbnail URL']()} fullWidth variant='outlined' value={profile.thumbnailUrl || ''} />\n      <TextField onChange={handleChange} margin='dense' id='bannerUrl' label={t['Banner URL']()} fullWidth variant='outlined' value={profile.bannerUrl || ''} />\n      <TextField\n        className={classes.description}\n        onChange={handleChange}\n        margin='dense'\n        id='description'\n        label={t.Description()}\n        fullWidth\n        multiline\n        rows={4}\n        variant='outlined'\n        value={profile.description || ''}\n      />\n      {errorMessage && (\n        <Alert classes={{message: classes.errorMessage}} severity='error'>\n          {errorMessage}\n        </Alert>\n      )}\n    </Box>\n  )\n\n  const actions = (\n    <div>\n      <Button disableElevation variant='contained' onClick={handlePublish} color='primary'>\n        SAV3\n      </Button>\n    </div>\n  )\n\n  return <Modal open={open} onClose={onClose} content={content} actions={actions} />\n}\n\nEditProfileModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  previousProfile: PropTypes.object.isRequired\n}\n\nexport default EditProfileModal\n","import {useState} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport PropTypes from 'prop-types'\nimport useTranslation from 'src/translations/use-translation'\nimport ShareIcon from '@material-ui/icons/ShareOutlined'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport urlUtils from 'src/lib/utils/url'\nimport useCopyClipboard from 'src/hooks/utils/use-copy-clipboard'\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    '& .MuiPaper-rounded': {\n      borderRadius: theme.sav3.popoverMenu.borderRadius\n    }\n  },\n  menuItemIcon: {\n    minWidth: 28\n  },\n  moreIconButton: {\n    padding: theme.spacing(1.25)\n  }\n}))\n\nfunction ProfileMoreMenu ({userCid} = {}) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <IconButton className={classes.moreIconButton} onClick={handleClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        className={classes.menu}\n        elevation={4}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <ShareMenuItem userCid={userCid} onClose={handleClose} />\n      </Menu>\n    </div>\n  )\n}\n\nProfileMoreMenu.propTypes = {\n  userCid: PropTypes.string.isRequired\n}\n\nfunction ShareMenuItem ({userCid, onClose} = {}) {\n  const classes = useStyles()\n  const t = useTranslation()\n\n  const [isCopied, setCopied] = useCopyClipboard(1100)\n  const getUrl = () => {\n    const encodedPostCid = urlUtils.encodeCid(userCid)\n    return `${window.location.origin}/#/profile/${encodedPostCid}`\n  }\n\n  const handleClick = () => {\n    setCopied(getUrl())\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  return (\n    <Tooltip title={t['Copied to clipboard']()} open={isCopied} enterDelay={500} leaveDelay={200}>\n      <MenuItem onClick={handleClick}>\n        <ListItemIcon className={classes.menuItemIcon}>\n          <ShareIcon fontSize='small' />\n        </ListItemIcon>\n        <Typography>{t.Share()}</Typography>\n      </MenuItem>\n    </Tooltip>\n  )\n}\n\nShareMenuItem.propTypes = {\n  userCid: PropTypes.string.isRequired,\n  onClose: PropTypes.func\n}\n\nexport default ProfileMoreMenu\n","import {useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Avatar from '@material-ui/core/Avatar'\nimport useTranslation from 'src/translations/use-translation'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport PostsFeed from 'src/components/feeds/posts'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\nimport useUserPosts from 'src/hooks/use-user-posts'\nimport useUserProfile from 'src/hooks/use-user-profile'\nimport PropTypes from 'prop-types'\nimport Description from './description'\nimport EditProfileModal from './edit-profile-modal'\nimport assert from 'assert'\nimport Divider from '@material-ui/core/Divider'\nimport useIsFollowing from 'src/hooks/following/use-is-following'\nimport MoreMenuButton from './more-menu'\n\nconst emptyImage = 'data:image/png;base64,'\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    paddingTop: '33.25%' // approximately 200px height\n  },\n  avatar: {\n    position: 'absolute',\n    // make avatar 25% of the middle col\n    width: theme.sav3.layout.columns.middle.width.md / 4,\n    height: theme.sav3.layout.columns.middle.width.md / 4,\n    marginTop: theme.sav3.layout.columns.middle.width.md / -8,\n    marginLeft: theme.spacing(2),\n    borderWidth: theme.spacing(0.5),\n    borderStyle: 'solid',\n    borderColor: theme.palette.background.default,\n    [theme.breakpoints.down(theme.sav3.layout.columns.middle.width.md)]: {\n      width: '25vw',\n      height: '25vw',\n      marginTop: '-12.5vw',\n      borderWidth: theme.spacing(0.25)\n    }\n  },\n  displayName: {\n    wordBreak: 'break-all'\n  }\n}))\n\nfunction Profile ({userCid} = {}) {\n  const ownCid = useOwnUserCid()\n  const classes = useStyles()\n  const posts = useUserPosts(userCid)\n  const profile = useUserProfile(userCid)\n\n  console.log('Profile', {ownCid, userCid, posts, profile})\n\n  let button\n  if (userCid === ownCid) {\n    button = <EditProfileButton profile={profile} />\n  }\n  // dont show button if dont know own cid yet\n  else if (ownCid) {\n    button = <FollowButton userCid={userCid} />\n  }\n\n  let description = profile.description || ''\n  if (description && description.length > 140) {\n    description = description.substring(0, 140)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CardMedia className={classes.banner} image={(profile.bannerUrl && forceHttps(profile.bannerUrl)) || emptyImage} />\n      <Avatar src={profile.thumbnailUrl && forceHttps(profile.thumbnailUrl)} className={classes.avatar} />\n      <Box p={2} pb={0} display='flex' flexDirection='row-reverse'>\n        {button}\n        <MoreMenuButton userCid={userCid} />\n      </Box>\n      <CardHeader className={classes.displayName} pb={0} title={profile.displayName} subheader={userCid} />\n      <Box p={2} pt={0}>\n        <Description description={description} />\n      </Box>\n      <Divider />\n      <PostsFeed posts={posts} />\n    </div>\n  )\n}\n\nProfile.propTypes = {\n  userCid: PropTypes.string.isRequired\n}\n\nfunction EditProfileButton ({profile}) {\n  const t = useTranslation()\n  const [openEditProfileModal, setOpenEditProfileModal] = useState(false)\n  return (\n    <div>\n      <Button variant='outlined' size='large' color='primary' onClick={() => setOpenEditProfileModal(true)}>\n        {t['Edit profile']()}\n      </Button>\n      <EditProfileModal previousProfile={profile} open={openEditProfileModal} onClose={() => setOpenEditProfileModal(false)} />\n    </div>\n  )\n}\n\nfunction FollowButton ({userCid} = {}) {\n  const t = useTranslation()\n  const [isFollowing, setIsFollowing] = useIsFollowing(userCid)\n\n  let followButton = (\n    <Button variant='outlined' size='large' color='primary' onClick={() => setIsFollowing(true)}>\n      {t.Follow()}\n    </Button>\n  )\n  if (isFollowing) {\n    followButton = (\n      <Button variant='outlined' size='large' color='primary' onClick={() => setIsFollowing(false)}>\n        {t.Unfollow()}\n      </Button>\n    )\n  }\n  return followButton\n}\n\nFollowButton.propTypes = {\n  userCid: PropTypes.string.isRequired\n}\n\nconst forceHttps = (link) => {\n  assert(typeof link === 'string', `forceHttps link '${link}' not a string`)\n  link = link.trim()\n  link = link.replace(/^http:\\/\\//, 'https://')\n  return link\n}\n\nexport default Profile\n","import Box from '@material-ui/core/Box'\nimport useUserProfile from 'src/hooks/use-user-profile'\nimport TopBar from 'src/components/top-bar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport {useHistory, useParams} from 'react-router-dom'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\nimport ProfileComponent from './components/profile'\nimport useTranslation from 'src/translations/use-translation'\nimport urlUtils from 'src/lib/utils/url'\n\nfunction Profile () {\n  const {encodedCid} = useParams()\n  const urlIsExpired = encodedCid && urlUtils.encodedCidIsExpired(encodedCid)\n  let urlUserCid\n  if (!urlIsExpired && encodedCid) {\n    urlUserCid = urlUtils.decodeCid(encodedCid)\n  }\n\n  const isOwnProfile = !encodedCid\n  const ownCid = useOwnUserCid()\n\n  let userCid\n  if (isOwnProfile) {\n    userCid = ownCid\n  }\n  else {\n    userCid = urlUserCid\n  }\n\n  const profile = useUserProfile(userCid)\n  const history = useHistory()\n  const t = useTranslation()\n\n  console.log('Profile', {userCid, urlUserCid, urlIsExpired, isOwnProfile})\n\n  return (\n    <div>\n      <TopBar>\n        <Box pr={1}>\n          <IconButton onClick={() => history.goBack()}>\n            <ArrowBack />\n          </IconButton>\n        </Box>\n        <Typography noWrap variant='h6'>\n          {profile.displayName || (isOwnProfile && t['Edit profile']())}\n        </Typography>\n      </TopBar>\n      {urlIsExpired && (\n        <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n          <Typography variant='body1'>{t['URL expired']() + '.'}</Typography>\n        </Box>\n      )}\n      {!urlIsExpired && <ProfileComponent userCid={userCid} />}\n    </div>\n  )\n}\n\nexport default Profile\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\n\nconst useOwnPeerCid = () => {\n  const [ownPeerCid, setOwnPeerCid] = useState()\n\n  useEffect(() => {\n    ;(async () => {\n      const ownPeerCid = await sav3Ipfs.getOwnPeerCid()\n      setOwnPeerCid(ownPeerCid)\n    })()\n  }, [])\n\n  return ownPeerCid\n}\n\nexport default useOwnPeerCid\n","import {makeStyles} from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport GroupIcon from '@material-ui/icons/Group'\nimport {Link as RouterLink} from 'react-router-dom'\nimport useTranslation from 'src/translations/use-translation'\nimport ThemeSwitcher from 'src/components/theme-switcher'\nimport TranslationSwitcher from 'src/components/translation-switcher'\n\nconst useStyles = makeStyles((theme) => ({\n  text: {},\n  root: {\n    width: theme.sav3.drawerMenu.width\n  }\n}))\n\nfunction HomeMenu () {\n  const classes = useStyles()\n  const t = useTranslation()\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItem button component={RouterLink} to='/following'>\n          <ListItemIcon>\n            <GroupIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Following()} className={classes.text} />\n        </ListItem>\n        {/* temporarily added to bottom menu\n        <ListItem button component={RouterLink} to='/peers'>\n          <ListItemIcon>\n            <PeersIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Peers()} className={classes.text} />\n        </ListItem>\n        <ListItem button component={RouterLink} to='/stats'>\n          <ListItemIcon>\n            <BarChartIcon fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Stats()} className={classes.text} />\n        </ListItem>\n        */}\n        <ListItem button component={RouterLink} to='/profile'>\n          <ListItemIcon>\n            <AccountCircle fontSize='large' />\n          </ListItemIcon>\n          <ListItemText primary={t.Profile()} className={classes.text} />\n        </ListItem>\n        <ListItem>\n          <ThemeSwitcher />\n          <TranslationSwitcher />\n        </ListItem>\n      </List>\n    </div>\n  )\n}\n\nexport default HomeMenu\n","import {useState} from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport useUserProfile from 'src/hooks/use-user-profile'\nimport IconButton from '@material-ui/core/IconButton'\nimport useOwnPeerCid from 'src/hooks/use-own-peer-cid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Menu from './index'\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.sav3.topBar.height / 1.75,\n    height: theme.sav3.topBar.height / 1.75\n  }\n}))\n\nfunction AvatarDrawerMenuButton () {\n  const userCid = useOwnPeerCid()\n  const classes = useStyles()\n  const profile = useUserProfile(userCid)\n  const [drawerOpen, setDrawerOpen] = useState(false)\n\n  return (\n    <div>\n      <IconButton style={{backgroundColor: 'transparent'}} disableRipple disableFocusRipple onClick={() => setDrawerOpen(true)}>\n        <Avatar src={profile.thumbnailUrl} className={classes.avatar} />\n      </IconButton>\n      <Drawer achor='left' elevation={2} open={drawerOpen} onClose={() => setDrawerOpen(false)}>\n        <Menu />\n      </Drawer>\n    </div>\n  )\n}\n\nexport default AvatarDrawerMenuButton\n","import {useEffect, useState} from 'react'\nimport followManager from 'src/lib/follow-manager'\n\nconst useFollowingOnce = () => {\n  const [following, setFollowing] = useState([])\n\n  useEffect(() => {\n    ;(async () => {\n      const following = await followManager.getAllFollowing()\n      setFollowing(following)\n    })()\n  }, [])\n\n  return following\n}\n\nexport default useFollowingOnce\n","import memoize from 'p-memoize'\n\nconst createLocalStorageCache = (func) => {\n  const localStorageKey = func.toString()\n  const cache = {\n    has: (key) => {\n      return !!localStorage.getItem(`${localStorageKey}-${key}`)\n    },\n    get: (key) => {\n      return JSON.parse(localStorage.getItem(`${localStorageKey}-${key}`))\n    },\n    set: (key, value) => {\n      ;(async () => {\n        value.data = await value.data\n        localStorage.setItem(`${localStorageKey}-${key}`, JSON.stringify(value))\n      })()\n    },\n    delete: (key) => {\n      localStorage.removeItem(`${localStorageKey}-${key}`)\n    },\n    clear: () => {\n      throw Error('localStorageMemoize.clear() not implemented')\n    }\n  }\n  return cache\n}\n\nconst localStorageMemoize = (func, options = {}) => {\n  const cache = createLocalStorageCache(func)\n  return memoize(func, {...options, cache})\n}\n\nexport default localStorageMemoize\n","import localStorageMemoize from 'src/lib/utils/local-storage-memoize'\nimport config from 'src/config'\nimport assert from 'assert'\nimport isIpfs from 'is-ipfs'\n\nexport const getBootstrapUsersCids = async () => {\n  try {\n    const cids = await fetchBootstrapUsersCidsFromGoogleSheet()\n    return cids\n  }\n  catch (e) {\n    console.error(e)\n    return []\n  }\n}\n\nconst _fetchBootstrapUsersCidsFromGoogleSheet = async () => {\n  const googleSheetId = config.bootstrapUsersGoogleSheetId\n  assert(googleSheetId && typeof googleSheetId === 'string', `fetchBootstrapUsersCidsFromGoogleSheet invalid google sheet id '${googleSheetId}'`)\n  let res\n  const bootstrapUsers = []\n  try {\n    res = await fetch(`https://docs.google.com/spreadsheets/d/${googleSheetId}/export?format=csv`)\n    res = await res.text()\n    res = res.split('\\n')\n    for (const userCid of res) {\n      if (isIpfs.cid(userCid.trim())) {\n        bootstrapUsers.push(userCid.trim())\n      }\n    }\n  }\n  catch (e) {\n    throw Error(`failed fetching bootstrap users from google sheet '${googleSheetId}' response '${res}': ${e.message}`)\n  }\n  return bootstrapUsers\n}\nconst oneHour = 1000 * 60 * 60\nconst fetchBootstrapUsersCidsFromGoogleSheet = localStorageMemoize(_fetchBootstrapUsersCidsFromGoogleSheet, {maxAge: oneHour})\n\nexport default {\n  getBootstrapUsersCids\n}\n","import {useEffect, useState} from 'react'\nimport bootstrapUsersUtils from 'src/lib/sav3-ipfs/utils/bootstrap-users'\n\nconst useBootstrapUsersCids = () => {\n  const [bootstrapUsersCids, setBootstrapUsersCids] = useState([])\n  console.log('useBootstrapUsersCids', {bootstrapUsersCids})\n\n  useEffect(() => {\n    ;(async () => {\n      const bootstrapUsersCids = await bootstrapUsersUtils.getBootstrapUsersCids()\n      setBootstrapUsersCids(bootstrapUsersCids)\n    })()\n  }, [])\n\n  return bootstrapUsersCids\n}\n\nexport default useBootstrapUsersCids\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\n\nconst useUsersIpnsData = (ipnsPaths) => {\n  assert(Array.isArray(ipnsPaths), `invalid ipnsPaths '${JSON.stringify(ipnsPaths)}'`)\n  const defaultUsersIpnsData = {}\n  const [usersIpnsData, setUsersIpnsData] = useState(defaultUsersIpnsData)\n  console.log('useUsersIpnsData', {ipnsPaths, usersIpnsData})\n\n  useEffect(() => {\n    if (!ipnsPaths.length) {\n      return\n    }\n\n    const ipnsPathsSet = new Set(ipnsPaths)\n\n    // subscribe to future published ipns paths\n    const onPublish = async (newIpnsPath, ipnsValue) => {\n      if (!ipnsPathsSet.has(newIpnsPath)) {\n        // publish event is a different user\n        return\n      }\n\n      // update usersIpnsData state asynchronously as new ipfs files arrive\n      const ipnsData = await sav3Ipfs.getIpfsFile(ipnsValue)\n      setUsersIpnsData((previousUsersIpnsData) => ({\n        ...previousUsersIpnsData,\n        [newIpnsPath]: JSON.parse(ipnsData)\n      }))\n    }\n    sav3Ipfs.on('publish', onPublish)\n\n    // get the current ipns paths once\n    ;(async () => {\n      const ipnsValues = await sav3Ipfs.subscribeToIpnsPaths(ipnsPaths)\n      for (const [i, ipnsValue] of ipnsValues.entries()) {\n        if (!ipnsValue) {\n          // user has not published anything yet\n          continue\n        }\n\n        // update usersIpnsData state asynchronously as new ipfs files arrive\n        const ipnsPath = ipnsPaths[i]\n        sav3Ipfs.getIpfsFile(ipnsValue).then((ipnsData) => {\n          setUsersIpnsData((previousUsersIpnsData) => ({\n            ...previousUsersIpnsData,\n            [ipnsPath]: JSON.parse(ipnsData)\n          }))\n        })\n      }\n    })()\n\n    // unsubscribe after component unmounts\n    return () => {\n      sav3Ipfs.off('publish', onPublish)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(ipnsPaths)])\n\n  return usersIpnsData\n}\n\nexport default useUsersIpnsData\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\nimport useUsersIpnsData from 'src/hooks/use-users-ipns-data'\n\nconst useUsersProfiles = (userCids) => {\n  assert(Array.isArray(userCids), `invalid userCids '${JSON.stringify(userCids)}'`)\n  const defaultUserProfiles = {}\n  const [usersProfiles, setUsersProfiles] = useState(defaultUserProfiles)\n  const usersIpnsData = useUsersIpnsData(userCids)\n  const profileCids = {}\n  for (const userCid in usersIpnsData) {\n    profileCids[userCid] = usersIpnsData[userCid].profileCid\n  }\n  console.log('useUsersProfiles', {usersIpnsData, userCids, profileCids, usersProfiles})\n\n  useEffect(() => {\n    for (const userCid in profileCids) {\n      const profileCid = profileCids[userCid]\n      if (!profileCid || typeof profileCid !== 'string') {\n        continue\n      }\n\n      sav3Ipfs.getUserProfile(profileCid).then((userProfile) => {\n        setUsersProfiles((previousUsersProfiles) => ({\n          ...previousUsersProfiles,\n          [userCid]: userProfile\n        }))\n      })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(profileCids)])\n\n  return usersProfiles\n}\n\nexport default useUsersProfiles\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\nimport useUsersIpnsData from 'src/hooks/use-users-ipns-data'\nimport useUsersProfiles from 'src/hooks/use-users-profiles'\n\nconst useUsersPosts = (userCids) => {\n  assert(Array.isArray(userCids), `invalid userCids '${JSON.stringify(userCids)}'`)\n  const defaultUsersPosts = []\n  const [usersPosts, setUsersPosts] = useState(defaultUsersPosts)\n  const usersIpnsData = useUsersIpnsData(userCids)\n  const profiles = useUsersProfiles(userCids)\n  const lastPostCids = []\n  for (const userCid in usersIpnsData) {\n    lastPostCids.push(usersIpnsData[userCid].lastPostCid)\n  }\n\n  console.log('useUsersPosts', {usersIpnsData, userCids, lastPostCids, usersPosts, profiles})\n\n  useEffect(() => {\n    if (!lastPostCids.length) {\n      return\n    }\n    for (const lastPostCid of lastPostCids) {\n      if (!lastPostCid || typeof lastPostCid !== 'string') {\n        // user hasn't posted yet\n        continue\n      }\n\n      sav3Ipfs.getUserPostsFromLastPostCid(lastPostCid).then((userPosts) => {\n        const posts = {}\n        for (const userPost of userPosts) {\n          userPost.profile = profiles[userPost.userCid] || {}\n          posts[userPost.cid] = userPost\n        }\n\n        setUsersPosts((previousUsersPosts) => ({\n          ...previousUsersPosts,\n          ...posts\n        }))\n      })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(lastPostCids), JSON.stringify(profiles)])\n\n  return usersPosts\n}\n\nexport default useUsersPosts\n","import {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport useTranslation from 'src/translations/use-translation'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport Alert from '@material-ui/lab/Alert'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport useUserProfile from 'src/hooks/use-user-profile'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst useStyles = makeStyles((theme) => ({\n  errorMessage: {\n    overflow: 'hidden'\n  },\n  content: {\n    '& textarea': {\n      overflow: 'hidden'\n    },\n    // remove text input variant borders\n    '& fieldset': {\n      border: 'none'\n    },\n    '& .MuiInputBase-root': {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    marginBottom: theme.spacing(1)\n  },\n  contentInput: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  avatar: {\n    // slightly higher placement than the user name seems more pleasing\n    marginTop: theme.spacing(-0.25),\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    // borders\n    borderWidth: theme.sav3.borderWidth,\n    borderStyle: 'solid',\n    borderColor: theme.sav3.borderColor\n  }\n}))\n\nfunction PublishPostForm () {\n  const t = useTranslation()\n  const classes = useStyles()\n  const theme = useTheme()\n  const userCid = useOwnUserCid()\n  const profile = useUserProfile(userCid)\n\n  const [content, setContent] = useState('')\n  const [errorMessage, setErrorMessage] = useState()\n\n  const handleChange = (event) => {\n    let content = event.target.value\n    try {\n      if (content.length > 140) {\n        content = content.subtring(0, 140)\n      }\n      setContent(content)\n    }\n    catch (e) {}\n  }\n\n  const handlePublish = async () => {\n    try {\n      await sav3Ipfs.publishPost({content})\n      setErrorMessage(null)\n      setContent('')\n    }\n    catch (e) {\n      setErrorMessage(e.message)\n    }\n  }\n\n  const modalActions = (\n    <div>\n      <Box>\n        <Divider />\n      </Box>\n      <Box alignItems='center' display='flex' height={theme.sav3.topBar.height}>\n        <Box flexGrow={1}></Box>\n        <Button disableElevation variant='contained' onClick={handlePublish} color='primary'>\n          SAV3\n        </Button>\n      </Box>\n    </div>\n  )\n\n  return (\n    <Box px={2} display='flex'>\n      {/* left col avatar */}\n      <Box pr={1.5} py={1.5}>\n        <Avatar src={profile.thumbnailUrl} className={classes.avatar} />\n      </Box>\n\n      <Box pt={1} width='100%'>\n        <TextField className={classes.content} onChange={handleChange} margin='dense' id='content' placeholder={t['Uncensorable content']()} fullWidth multiline variant='outlined' value={content} />\n        {errorMessage && (\n          <Box py={1}>\n            <Alert classes={{message: classes.errorMessage}} severity='error'>\n              {errorMessage}\n            </Alert>\n          </Box>\n        )}\n\n        {modalActions}\n      </Box>\n    </Box>\n  )\n}\n\nPublishPostForm.propTypes = {}\n\nexport default PublishPostForm\n","import {useState, useEffect} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\n\nconst usersFollowingCache = {}\n\nconst useUsersFollowing = (userCids) => {\n  assert(Array.isArray(userCids), `invalid userCids '${JSON.stringify(userCids)}'`)\n  // remove duplicates\n  const uniqueUserCids = new Set(userCids)\n  const userCidsString = JSON.stringify([...uniqueUserCids])\n  const [usersFollowing, setUsersFollowing] = useState([])\n\n  console.log('useUsersFollowing', {userCids, usersFollowing})\n\n  useEffect(() => {\n    for (const userCid of uniqueUserCids) {\n      const userFollowing = usersFollowingCache[userCid]\n      if (userFollowing) {\n        setUsersFollowing((previousUsersFollowing) => addNewUsersFollowing(previousUsersFollowing, userFollowing))\n      }\n      else {\n        sav3Ipfs.getUserFollowing(userCid).then((userFollowing) => {\n          usersFollowingCache[userCid] = userFollowing\n          setUsersFollowing((previousUsersFollowing) => addNewUsersFollowing(previousUsersFollowing, userFollowing))\n        })\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userCidsString])\n\n  return usersFollowing\n}\n\nconst addNewUsersFollowing = (previousUsersFollowing, newUsersFollowing) => {\n  previousUsersFollowing = new Set(previousUsersFollowing)\n  for (const userCid of newUsersFollowing) {\n    previousUsersFollowing.add(userCid)\n  }\n  return [...previousUsersFollowing]\n}\n\nexport default useUsersFollowing\n","import Box from '@material-ui/core/Box'\nimport TopBar from 'src/components/top-bar'\nimport Typography from '@material-ui/core/Typography'\nimport {useTheme} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport AvatarDrawerMenuButton from 'src/components/menus/drawer/avatar-button'\nimport Feed from 'src/components/feeds/posts'\nimport useFollowingOnce from 'src/hooks/following/use-following-once'\nimport useBootstrapUsersCids from 'src/hooks/following/use-bootstrap-users-cids'\nimport useUsersPosts from 'src/hooks/use-users-posts'\nimport PublishPostForm from 'src/components/publish-post/form'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport useTranslation from 'src/translations/use-translation'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\nimport Divider from '@material-ui/core/Divider'\nimport useUsersFollowing from 'src/hooks/use-users-following'\n\nfunction Home () {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const t = useTranslation()\n  const bootstrapUsersCids = useBootstrapUsersCids()\n  let followingCids = useFollowingOnce()\n  const followingOfFollowing = useUsersFollowing([...followingCids, ...bootstrapUsersCids])\n  const ownCid = useOwnUserCid()\n  if (ownCid) {\n    followingCids = [ownCid, ...followingCids, ...bootstrapUsersCids, ...followingOfFollowing]\n  }\n  const postsObject = useUsersPosts(followingCids)\n  const posts = []\n  for (const postCid in postsObject) {\n    posts.push(postsObject[postCid])\n  }\n  console.log('Home', {followingCids, followingOfFollowing, bootstrapUsersCids, ownCid, posts, postsObject})\n\n  let feed = <Feed posts={posts} />\n  if (!posts.length) {\n    feed = (\n      <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n        <CircularProgress size={24} />\n        <Box p={0.5} />\n        <Typography variant='body1'>{t['Connecting to peers']() + '...'}</Typography>\n      </Box>\n    )\n  }\n  if (!posts.length && !followingCids.length) {\n    feed = (\n      <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n        <Typography variant='body1'>{t['Not following anyone']() + '...'}</Typography>\n      </Box>\n    )\n  }\n\n  return (\n    <div>\n      <TopBar>\n        {fullScreen && (\n          <Box pl={2} pr={1}>\n            <AvatarDrawerMenuButton />\n          </Box>\n        )}\n        <Box pl={2}>\n          <Typography noWrap variant='h6'>\n            {t.Home()}\n          </Typography>\n        </Box>\n      </TopBar>\n      {!fullScreen && (\n        <div>\n          <Box pb={1}>\n            <PublishPostForm />\n            <Divider />\n          </Box>\n          <Divider />\n        </div>\n      )}\n      {feed}\n    </div>\n  )\n}\n\nexport default Home\n","import {useState} from 'react'\nimport Box from '@material-ui/core/Box'\nimport TopBar from 'src/components/top-bar'\nimport {useTheme, makeStyles} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport AvatarDrawerMenuButton from 'src/components/menus/drawer/avatar-button'\nimport SearchIcon from '@material-ui/icons/Search'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport useTranslation from 'src/translations/use-translation'\nimport Profile from 'src/views/profile/components/profile'\nimport isIpfs from 'is-ipfs'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    height: theme.sav3.topBar.height / 1.5,\n    '& fieldset': {\n      border: 'none',\n      backgroundColor: theme.palette.divider\n    }\n  }\n}))\n\nfunction Search () {\n  const classes = useStyles()\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const [userCid, setUserCid] = useState('')\n  const t = useTranslation()\n\n  const handleChange = (event) => {\n    let userCid = event.target.value\n    try {\n      userCid = userCid.trim()\n      setUserCid(userCid)\n    }\n    catch (e) {}\n  }\n\n  return (\n    <div>\n      <TopBar>\n        <Box pl={fullScreen ? 2 : 4}>\n          {fullScreen && (\n            <Box pr={0.5}>\n              <AvatarDrawerMenuButton />\n            </Box>\n          )}\n        </Box>\n        <Box width='100%' pl={0} pr={4}>\n          <TextField\n            onChange={handleChange}\n            InputProps={{\n              spellCheck: false,\n              classes: {root: classes.search},\n              startAdornment: (\n                <Box pr={1}>\n                  <InputAdornment position='start'>\n                    <SearchIcon />\n                  </InputAdornment>\n                </Box>\n              )\n            }}\n            variant='outlined'\n            fullWidth\n            placeholder={t['Search user ID']()}\n            value={userCid}\n          />\n        </Box>\n      </TopBar>\n      {isIpfs.cid(userCid) && <Profile userCid={userCid} />}\n    </div>\n  )\n}\n\nexport default Search\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\n\nconst usePeersCids = () => {\n  const [peerCids, setPeersCids] = useState([])\n  const [pollCount, setPollCount] = useState(0)\n\n  const pollTime = 2000 // if too fast will break the peer posts demo\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-vars\n    const interval = setInterval(() => {\n      setPollCount(pollCount + 1)\n    }, pollTime)\n\n    // return () => clearInterval(interval)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    ;(async () => {\n      const peerCids = await sav3Ipfs.getPeersCids()\n      setPeersCids(peerCids)\n    })()\n  }, [pollCount])\n\n  return peerCids\n}\n\nexport default usePeersCids\n","import Box from '@material-ui/core/Box'\nimport TopBar from 'src/components/top-bar'\nimport {useTheme} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport useTranslation from 'src/translations/use-translation'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport {useHistory} from 'react-router-dom'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport Typography from '@material-ui/core/Typography'\nimport Feed from 'src/components/feeds/posts'\nimport usePeersCids from 'src/hooks/use-peers-cids'\nimport useUsersPosts from 'src/hooks/use-users-posts'\nimport PublishPostForm from 'src/components/publish-post/form'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport useOwnUserCid from 'src/hooks/use-own-user-cid'\n\nfunction Peers () {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const t = useTranslation()\n  const history = useHistory()\n\n  let peersCids = usePeersCids()\n  const ownCid = useOwnUserCid()\n  if (ownCid) {\n    peersCids = [ownCid, ...peersCids]\n  }\n  const postsObject = useUsersPosts(peersCids)\n  const posts = []\n  for (const postCid in postsObject) {\n    posts.push(postsObject[postCid])\n  }\n  console.log('Peers', {peersCids, posts, postsObject})\n\n  let feed = <Feed posts={posts} />\n  if (!posts.length) {\n    feed = (\n      <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n        <CircularProgress size={24} />\n        <Box p={0.5} />\n        <Typography variant='body1'>{t['Connecting to peers']() + '...'}</Typography>\n      </Box>\n    )\n  }\n\n  return (\n    <div>\n      <TopBar>\n        <Box pr={1}>\n          <IconButton onClick={() => history.goBack()}>\n            <ArrowBack />\n          </IconButton>\n        </Box>\n        <Typography noWrap variant='h6'>\n          {t['Connected peers posts']()}\n        </Typography>\n      </TopBar>\n      {!fullScreen && (\n        <div>\n          <Box pb={1}>\n            <PublishPostForm />\n            <Divider />\n          </Box>\n          <Divider />\n        </div>\n      )}\n      {feed}\n    </div>\n  )\n}\n\nexport default Peers\n","import assert from 'assert'\nimport IdbLru from 'src/lib/utils/idb-lru'\n\nconst getIsoCountryCodeFromIpAttempts = new Set()\nconst ipIsoCountryCodeCache = IdbLru({\n  name: 'ipIsoCountryCodeCache',\n  maxSize: 2000\n})\n\n/**\n * return iso country code if cached, if not attempt to cache it\n *\n * @param {string} ip\n * @returns {Promise<string>} country iso code\n */\nexport const getIsoCountryCodeFromIpCached = async (ip) => {\n  const isoCountryCode = await ipIsoCountryCodeCache.get(ip)\n  if (isoCountryCode) {\n    return isoCountryCode\n  }\n\n  if (!getIsoCountryCodeFromIpAttempts.has(ip)) {\n    getIsoCountryCodeFromIpAttempts.add(ip)\n    getIsoCountryCodeFromIp(ip)\n      .then((isoCountryCode) => ipIsoCountryCodeCache.set(ip, isoCountryCode))\n      .catch((e) => console.log(e))\n  }\n\n  throw Error(`iso country code for ip '${ip}' not cached yet`)\n}\n\n/**\n * @param {string} ip\n * @returns {Promise<string>} country iso code\n */\nexport const getIsoCountryCodeFromIp = async (ip) => {\n  assert(typeof ip === 'string', `invalid ip '${ip}' not a string`)\n\n  const apiUrl = `https://ipapi.co/${ip}/country/`\n  let isoCountryCode, res\n  try {\n    res = await fetch(apiUrl)\n    res = await res.text()\n    isoCountryCode = res.trim().toUpperCase()\n    assertIsIsoCountryCode(isoCountryCode)\n  }\n  catch (e) {\n    e.message = `failed getting country iso code from '${apiUrl}' response '${res}': ${e.message}`\n    throw e\n  }\n  return isoCountryCode\n}\n\n/**\n * @param {string[]} ips\n * @returns {Promise<string[]>} country iso codes\n */\nexport const getIsoCountryCodesFromIps = (ips) => {\n  const promises = []\n  for (const ip of ips) {\n    promises.push(getIsoCountryCodeFromIp(ip))\n  }\n  return Promise.all(promises)\n}\n\n/**\n * @param {string} isoCountryCode\n * @returns {string} country flag emoji\n */\nexport const isoCountryCodeToCountryFlagEmoji = (isoCountryCode) => {\n  assertIsIsoCountryCode(isoCountryCode)\n  // offset between uppercase ascii and regional indicator symbols\n  const charOffset = 127397\n  const chars = [...isoCountryCode.toUpperCase()].map((c) => c.charCodeAt() + charOffset)\n  return String.fromCodePoint(...chars)\n}\n\n/**\n * @param {string} isoCountryCode\n */\nconst assertIsIsoCountryCode = (isoCountryCode) => {\n  const countryCodeRegex = /^[a-z]{2}$/i\n  const isoCountryCodeType = typeof isoCountryCode\n  assert(countryCodeRegex.test(isoCountryCode), `isoCountryCode must be an ISO 3166-1 alpha-2 string, but got '${isoCountryCodeType === 'string' ? isoCountryCode : isoCountryCodeType}' instead`)\n}\n\nexport default {\n  getIsoCountryCodeFromIpCached,\n  getIsoCountryCodeFromIp,\n  getIsoCountryCodesFromIps,\n  isoCountryCodeToCountryFlagEmoji\n}\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport ipUtils from 'src/lib/utils/ip'\n\nconst usePeersStats = () => {\n  const [peersStats, setPeersStats] = useState([])\n  const [pollCount, setPollCount] = useState(0)\n\n  const pollTime = 5000 // if too fast will break the peer posts demo\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-vars\n    const interval = setInterval(() => {\n      setPollCount(pollCount + 1)\n    }, pollTime)\n\n    // return () => clearInterval(interval)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    ;(async () => {\n      const peersStats = await sav3Ipfs.getPeersStats()\n      for (const peersStat of peersStats) {\n        if (!peersStat.ip) {\n          continue\n        }\n        let isoCountryCode\n        try {\n          isoCountryCode = await ipUtils.getIsoCountryCodeFromIpCached(peersStat.ip)\n        }\n        catch (e) {\n          console.log(e)\n          continue\n        }\n        const countryFlagEmoji = ipUtils.isoCountryCodeToCountryFlagEmoji(isoCountryCode)\n\n        peersStat.isoCountryCode = isoCountryCode\n        peersStat.countryFlagEmoji = countryFlagEmoji\n      }\n      setPeersStats(peersStats)\n    })()\n  }, [pollCount])\n\n  return peersStats\n}\n\nexport default usePeersStats\n","import {makeStyles} from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport prettyBytes from 'pretty-bytes'\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    // slightly higher placement than the user name seems more pleasing\n    marginTop: theme.spacing(-0.25),\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    // borders\n    borderWidth: theme.sav3.borderWidth,\n    borderStyle: 'solid',\n    borderColor: theme.sav3.borderColor,\n    backgroundColor: theme.palette.background.default\n  },\n  userCid: {\n    wordBreak: 'break-all'\n  }\n}))\n\nfunction Peer ({peer} = {}) {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Box px={2} py={1.5} display='flex'>\n        {/* left col avatar */}\n        <Box pr={1.5}>\n          <Avatar className={classes.avatar}>{peer.countryFlagEmoji}</Avatar>\n        </Box>\n\n        {/* right col header + content + bottom actions */}\n        <Box width='100%'>\n          {/* header */}\n          <Box display='flex'>\n            <Box flexGrow={1}>\n              <Box display='flex'>\n                <Typography variant='subtitle2'>\n                  {peer.ip}:{peer.port}\n                </Typography>\n              </Box>\n              <Box>\n                <Typography variant='caption' color='textSecondary' className={classes.userCid}>\n                  {peer.peerCid}\n                </Typography>\n              </Box>\n            </Box>\n            {/* add some height so it looks better */}\n            <Box height={48} />\n          </Box>\n\n          {/* content */}\n          <Typography variant='body2'>\n            ⬆️{prettyBytes(peer.dataSent)}&nbsp;&nbsp;⬇️{prettyBytes(peer.dataReceived)}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nexport default Peer\n","import Box from '@material-ui/core/Box'\nimport TopBar from 'src/components/top-bar'\nimport useTranslation from 'src/translations/use-translation'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport {useHistory} from 'react-router-dom'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport Typography from '@material-ui/core/Typography'\nimport usePeersStats from 'src/hooks/use-peers-stats'\nimport Peer from './components/peer'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Stats () {\n  const t = useTranslation()\n  const history = useHistory()\n\n  const peers = usePeersStats()\n  console.log('Stats', {peers})\n\n  return (\n    <div>\n      <TopBar>\n        <Box pr={1}>\n          <IconButton onClick={() => history.goBack()}>\n            <ArrowBack />\n          </IconButton>\n        </Box>\n        <Typography noWrap variant='h6'>\n          {t['Connected peers stats']()}\n        </Typography>\n      </TopBar>\n      <Feed peers={peers} />\n    </div>\n  )\n}\n\nfunction Feed ({peers} = {}) {\n  const t = useTranslation()\n  if (!peers.length) {\n    return (\n      <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n        <CircularProgress size={24} />\n        <Box p={0.5} />\n        <Typography variant='body1'>{t['Connecting to peers']() + '...'}</Typography>\n      </Box>\n    )\n  }\n\n  const peerComponents = []\n\n  for (const peer of peers) {\n    peerComponents.push(<Peer peer={peer} key={peer.peerCid + peer.port} />)\n    peerComponents.push(<Divider key={peer.peerCid + peer.port + 'feed divider'} />)\n  }\n\n  return <div>{peerComponents}</div>\n}\n\nexport default Stats\n","import {makeStyles} from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport assert from 'assert'\nimport useTranslation from 'src/translations/use-translation'\nimport Button from '@material-ui/core/Button'\nimport useIsFollowing from 'src/hooks/following/use-is-following'\nimport {Link as RouterLink} from 'react-router-dom'\nimport urlUtils from 'src/lib/utils/url'\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    // slightly higher placement than the user name seems more pleasing\n    marginTop: theme.spacing(-0.25),\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n    // borders\n    borderWidth: theme.sav3.borderWidth,\n    borderStyle: 'solid',\n    borderColor: theme.sav3.borderColor,\n    backgroundColor: theme.palette.background.default\n  },\n  userCid: {\n    wordBreak: 'break-all',\n    // remove added styles from link component\n    textDecoration: 'inherit'\n  },\n  displayName: {\n    // remove added styles from link component\n    color: 'inherit',\n    textDecoration: 'inherit'\n  }\n}))\n\n// same height as the 3 dots button of the post component\nconst buttonHeight = 48\n\nfunction User ({user} = {}) {\n  const classes = useStyles()\n  const t = useTranslation()\n  const [isFollowing, setIsFollowing] = useIsFollowing(user.cid)\n\n  let followButton = (\n    <Button variant='outlined' size='small' color='primary' onClick={() => setIsFollowing(true)}>\n      {t.Follow()}\n    </Button>\n  )\n  if (isFollowing) {\n    followButton = (\n      <Button variant='outlined' size='small' color='primary' onClick={() => setIsFollowing(false)}>\n        {t.Unfollow()}\n      </Button>\n    )\n  }\n\n  const encodedCid = urlUtils.encodeCid(user.cid)\n  const userProfileUrl = `/profile/${encodedCid}`\n\n  return (\n    <div>\n      <Box px={2} py={1.5} display='flex'>\n        {/* left col avatar */}\n        <Box pr={1.5}>\n          <Avatar component={RouterLink} to={userProfileUrl} src={user.thumbnailUrl && forceHttps(user.thumbnailUrl)} className={classes.avatar} />\n        </Box>\n\n        {/* right col header + content + bottom actions */}\n        <Box width='100%'>\n          {/* header */}\n          <Box display='flex'>\n            <Box flexGrow={1}>\n              <Box display='flex'>\n                <Typography className={classes.displayName} component={RouterLink} to={userProfileUrl} variant='subtitle2'>\n                  {user.displayName}\n                </Typography>\n              </Box>\n              <Box>\n                <Typography component={RouterLink} to={userProfileUrl} variant='caption' color='textSecondary' className={classes.userCid}>\n                  {user.cid}\n                </Typography>\n              </Box>\n            </Box>\n            <Box height={buttonHeight}>{followButton}</Box>\n          </Box>\n\n          {/* content */}\n          <Typography variant='body2'>{user.description}</Typography>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nconst forceHttps = (link) => {\n  assert(typeof link === 'string', `forceHttps link '${link}' not a string`)\n  link = link.trim()\n  link = link.replace(/^http:\\/\\//, 'https://')\n  return link\n}\n\nexport default User\n","import React from 'react'\nimport User from './user'\nimport Divider from '@material-ui/core/Divider'\nimport PropTypes from 'prop-types'\n\nfunction UsersFeed ({users} = {}) {\n  const userComponents = []\n\n  for (const user of users) {\n    userComponents.push(<User user={user} key={user.cid} />)\n    userComponents.push(<Divider key={user.cid + 'feed divider'} />)\n  }\n\n  return <div>{userComponents}</div>\n}\n\nUsersFeed.propTypes = {\n  users: PropTypes.array.isRequired\n}\n\nexport default UsersFeed\n","import Box from '@material-ui/core/Box'\nimport TopBar from 'src/components/top-bar'\nimport useTranslation from 'src/translations/use-translation'\nimport IconButton from '@material-ui/core/IconButton'\nimport {useHistory} from 'react-router-dom'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport Typography from '@material-ui/core/Typography'\nimport useFollowingOnce from 'src/hooks/following/use-following-once'\nimport useUsersProfiles from 'src/hooks/use-users-profiles'\nimport UsersFeed from 'src/components/feeds/users'\n\nfunction Following () {\n  const t = useTranslation()\n  const history = useHistory()\n\n  const followingCids = useFollowingOnce()\n  const profiles = useUsersProfiles(followingCids)\n  const users = []\n  for (const userCid of followingCids) {\n    const user = profiles[userCid] || {}\n    user.cid = userCid\n    users.push(user)\n  }\n\n  console.log('Following', {followingCids, profiles, users})\n\n  return (\n    <div>\n      <TopBar>\n        <Box pr={1}>\n          <IconButton onClick={() => history.goBack()}>\n            <ArrowBack />\n          </IconButton>\n        </Box>\n        <Typography noWrap variant='h6'>\n          {t.Following()}\n        </Typography>\n      </TopBar>\n      <UsersFeed users={users} />\n    </div>\n  )\n}\n\nexport default Following\n","import {useContext} from 'react'\nimport {FollowingContext} from './following-provider'\n\nconst useFollowing = () => {\n  const {following, setAllFollowing} = useContext(FollowingContext)\n  const _following = Object.keys(following).filter((userCid) => !!following[userCid])\n  return [_following, setAllFollowing]\n}\n\nexport default useFollowing\n","import {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport useTranslation from 'src/translations/use-translation'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport Alert from '@material-ui/lab/Alert'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport useFollowing from 'src/hooks/following/use-following'\nimport followManager from 'src/lib/follow-manager'\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    overflow: 'hidden'\n  },\n  data: {\n    '& textarea': {\n      fontFamily: 'Monospace',\n      minHeight: '10vh',\n      maxHeight: '40vh',\n      overflowY: 'scroll!important'\n    },\n    // remove text input variant borders\n    '& fieldset': {\n      border: 'none'\n    },\n    '& .MuiInputBase-root': {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nfunction ImportForm () {\n  const t = useTranslation()\n  const classes = useStyles()\n  const theme = useTheme()\n  const [, setFollowing] = useFollowing()\n\n  const [data, setData] = useState('')\n  const [errorMessage, setErrorMessage] = useState()\n  const [successMessage, setSuccessMessage] = useState()\n\n  const handleChange = (event) => {\n    const data = event.target.value\n    setData(data)\n  }\n\n  const handleFocus = (event) => {\n    // throws for unknown reason sometimes\n    try {\n      event.target.setSelectionRange(0, event.target.value.length)\n    }\n    catch (e) {}\n  }\n\n  const handleExport = async () => {\n    setData('Exporting...')\n    setErrorMessage(null)\n    setSuccessMessage(null)\n    try {\n      const following = await followManager.getAllFollowing()\n      const privateKey = await sav3Ipfs.getPrivateKey()\n      console.log({privateKey})\n      const data = JSON.stringify({privateKey, following})\n      setErrorMessage(null)\n      setData(data)\n    }\n    catch (e) {\n      setErrorMessage(e.message)\n    }\n    setSuccessMessage('Export successful. Copy paste your data somewhere safe.')\n  }\n\n  const handleImport = async () => {\n    setErrorMessage(null)\n    setSuccessMessage(null)\n    let dataObject\n\n    // validate json\n    try {\n      dataObject = JSON.parse(data)\n    }\n    catch (e) {\n      setErrorMessage(`Invalid JSON: ${e.message}`)\n      return\n    }\n\n    // validate confirm\n    const confirmMessage = 'Did you backup your data? Importing will irreversibly delete it. Click import again to confirm.'\n    if (errorMessage !== confirmMessage) {\n      setErrorMessage(confirmMessage)\n      return\n    }\n\n    // validate following\n    try {\n      // use follow manager to validate because setFollowing is a react hook that doesnt validate\n      await followManager.setAllFollowing(dataObject.following)\n      setFollowing(dataObject.following)\n    }\n    catch (e) {\n      setErrorMessage(`Invalid following: ${e.message}`)\n      return\n    }\n\n    // validate private key\n    try {\n      // use follow manager to validate because setFollowing is a react hook that doesnt validate\n      await followManager.setAllFollowing(dataObject.following)\n      setFollowing(dataObject.following)\n    }\n    catch (e) {\n      setErrorMessage(`Invalid privateKey: ${e.message}`)\n      return\n    }\n\n    setErrorMessage(null)\n    setSuccessMessage('Import successful.')\n  }\n\n  const modalActions = (\n    <div>\n      <Box>\n        <Divider />\n      </Box>\n      <Box alignItems='center' display='flex' height={theme.sav3.topBar.height}>\n        <Box flexGrow={1}></Box>\n        <Button disableElevation variant='contained' onClick={handleImport} color='primary'>\n          {t.Import()}\n        </Button>\n        <Box pr={0.5}></Box>\n        <Button disableElevation variant='contained' onClick={handleExport} color='primary'>\n          {t.Export()}\n        </Button>\n      </Box>\n    </div>\n  )\n\n  return (\n    <Box px={2} display='flex'>\n      <Box pt={0} width='100%'>\n        <TextField\n          onClick={handleFocus}\n          onFocus={handleFocus}\n          className={classes.data}\n          onChange={handleChange}\n          margin='dense'\n          id='data'\n          placeholder='Paste exported data here...'\n          fullWidth\n          multiline\n          variant='outlined'\n          value={data}\n        />\n        {errorMessage && (\n          <Box pb={1}>\n            <Alert classes={{message: classes.message}} severity='error'>\n              {errorMessage}\n            </Alert>\n          </Box>\n        )}\n        {successMessage && (\n          <Box pb={1}>\n            <Alert classes={{message: classes.message}} severity='success'>\n              {successMessage}\n            </Alert>\n          </Box>\n        )}\n        <Box pb={0} />\n        {modalActions}\n      </Box>\n    </Box>\n  )\n}\n\nexport default ImportForm\n","import Box from '@material-ui/core/Box'\nimport TopBar from 'src/components/top-bar'\nimport Typography from '@material-ui/core/Typography'\nimport {useTheme} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport AvatarDrawerMenuButton from 'src/components/menus/drawer/avatar-button'\nimport ImportForm from './components/form'\nimport useTranslation from 'src/translations/use-translation'\n\nfunction Export () {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'))\n  const t = useTranslation()\n\n  return (\n    <div>\n      <TopBar>\n        {fullScreen && (\n          <Box pl={2} pr={1}>\n            <AvatarDrawerMenuButton />\n          </Box>\n        )}\n        <Box pl={2}>\n          <Typography noWrap variant='h6'>\n            {t.Import()} / {t.Export()}\n          </Typography>\n        </Box>\n      </TopBar>\n      <ImportForm />\n    </div>\n  )\n}\n\nexport default Export\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\n\nconst usePosts = (postCids) => {\n  assert(Array.isArray(postCids), `invalid postCids '${JSON.stringify(postCids)}'`)\n  const defaultPosts = {}\n  const [posts, setPosts] = useState(defaultPosts)\n  console.log('usePosts', {postCids, posts})\n\n  useEffect(() => {\n    if (!postCids.length) {\n      return\n    }\n    for (const postCid of postCids) {\n      if (!postCid || typeof postCid !== 'string') {\n        continue\n      }\n\n      sav3Ipfs.getPost(postCid).then((post) => {\n        setPosts((previousPosts) => ({\n          ...previousPosts,\n          [postCid]: post\n        }))\n      })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(postCids)])\n\n  return posts\n}\n\nexport default usePosts\n","import {useEffect, useState} from 'react'\nimport sav3Ipfs from 'src/lib/sav3-ipfs'\nimport assert from 'assert'\nimport usePosts from 'src/hooks/use-posts'\nimport usePostRepliesCids from 'src/hooks/use-post-replies-cids'\n\nconst usePostWithReplies = (postCid) => {\n  assert(!postCid || typeof postCid === 'string', `invalid postCid '${JSON.stringify(postCid)}'`)\n  const [parentPost, setParentPost] = useState()\n  const repliesCids = usePostRepliesCids(parentPost && parentPost.cid)\n  const replies = usePosts(repliesCids)\n\n  // set parent post once\n  useEffect(() => {\n    if (!postCid || typeof postCid !== 'string') {\n      setParentPost()\n      return\n    }\n    ;(async () => {\n      const post = await sav3Ipfs.getPost(postCid)\n      let parentPost = post\n      if (post.parentPostCid) {\n        parentPost = await sav3Ipfs.getPost(post.parentPostCid)\n      }\n      setParentPost(parentPost)\n    })()\n  }, [postCid])\n\n  console.log('usePostWithReplies', {parentPost, repliesCids, replies})\n\n  if (!parentPost) {\n    return\n  }\n\n  return {...parentPost, replies}\n}\n\nexport default usePostWithReplies\n","import Box from '@material-ui/core/Box'\nimport useUsersProfiles from 'src/hooks/use-users-profiles'\nimport TopBar from 'src/components/top-bar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport {useHistory, useParams} from 'react-router-dom'\nimport usePostWithReplies from 'src/hooks/use-post-with-replies'\nimport useTranslation from 'src/translations/use-translation'\nimport Feed from 'src/components/feeds/posts'\nimport urlUtils from 'src/lib/utils/url'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Post () {\n  const {encodedCid} = useParams()\n  const urlIsExpired = encodedCid && urlUtils.encodedCidIsExpired(encodedCid)\n  let postCid\n  if (!urlIsExpired && encodedCid) {\n    postCid = urlUtils.decodeCid(encodedCid)\n  }\n\n  const postWithReplies = usePostWithReplies(postCid)\n\n  const history = useHistory()\n  const t = useTranslation()\n\n  // get posts\n  const posts = []\n  if (postWithReplies) {\n    posts.push(postWithReplies)\n    for (const i in postWithReplies.replies) {\n      posts.push(postWithReplies.replies[i])\n    }\n  }\n\n  // get profiles\n  const userCids = new Set()\n  for (const post of posts) {\n    userCids.add(post.userCid)\n  }\n  const profiles = useUsersProfiles([...userCids])\n\n  // add profiles to posts\n  for (const post of posts) {\n    post.profile = profiles[post.userCid] || {}\n  }\n\n  let feed = <Feed posts={posts} />\n  if (!posts.length) {\n    feed = (\n      <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n        <CircularProgress size={24} />\n        <Box p={0.5} />\n        <Typography variant='body1'>{t['Connecting to peers']() + '...'}</Typography>\n      </Box>\n    )\n  }\n  if (urlIsExpired) {\n    feed = (\n      <Box width='100%' py={4} display='flex' justifyContent='center' alignItems='center'>\n        <Typography variant='body1'>{t['URL expired']() + '.'}</Typography>\n      </Box>\n    )\n  }\n\n  console.log('Post', {postCid, postWithReplies, posts})\n\n  return (\n    <div>\n      <TopBar>\n        <Box pr={1}>\n          <IconButton onClick={() => history.goBack()}>\n            <ArrowBack />\n          </IconButton>\n        </Box>\n        <Typography noWrap variant='h6'>\n          {t.Post()}\n        </Typography>\n      </TopBar>\n      {feed}\n    </div>\n  )\n}\n\nexport default Post\n","import {Switch, Route} from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport LeftMenu from 'src/components/menus/left'\nimport BottomMenu from 'src/components/menus/bottom'\n\n// components\nimport ThemeSwitcher from 'src/components/theme-switcher'\nimport TranslationSwitcher from 'src/components/translation-switcher'\n\n// routes\nimport Profile from 'src/views/profile'\nimport Home from 'src/views/home'\nimport Search from 'src/views/search'\nimport Peers from 'src/views/peers'\nimport Stats from 'src/views/stats'\nimport Following from 'src/views/following'\nimport Export from 'src/views/export'\nimport Post from 'src/views/post'\n\nconst useStyles = makeStyles((theme) => ({\n  leftColumn: {\n    overflow: 'hidden',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    },\n    [theme.breakpoints.down('md')]: {\n      width: theme.sav3.layout.columns.left.width.xs\n    },\n    [theme.breakpoints.down('lg')]: {\n      width: theme.sav3.layout.columns.left.width.xs\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: theme.sav3.layout.columns.left.width.md\n    }\n  },\n  middleColumn: {\n    overflow: 'hidden',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    },\n    [theme.breakpoints.up('xs')]: {\n      width: theme.sav3.layout.columns.middle.width.md\n    },\n    // borders\n    borderLeftWidth: theme.sav3.borderWidth,\n    borderRightWidth: theme.sav3.borderWidth,\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    borderStyle: 'solid',\n    borderColor: theme.sav3.borderColor\n  },\n  rightColumn: {\n    overflow: 'hidden',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n    [theme.breakpoints.down('lg')]: {\n      width: theme.sav3.layout.columns.right.width.md,\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: theme.sav3.layout.columns.right.width.lg,\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4)\n    }\n  },\n  bottomMenu: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  appBar: {\n    backgroundColor: theme.palette.background.default\n  }\n}))\n\nfunction App () {\n  const classes = useStyles()\n  const theme = useTheme()\n  window.theme = theme\n\n  return (\n    <div>\n      <Grid container justify='center'>\n        <Grid item className={classes.leftColumn}>\n          <LeftMenu />\n        </Grid>\n        <Grid item className={classes.middleColumn}>\n          <Switch>\n            <Route path='/' exact>\n              <Home />\n            </Route>\n            <Route path='/profile/:encodedCid?' exact>\n              <Profile />\n            </Route>\n            <Route path='/search' exact>\n              <Search />\n            </Route>\n            <Route path='/peers' exact>\n              <Peers />\n            </Route>\n            <Route path='/stats' exact>\n              <Stats />\n            </Route>\n            <Route path='/following' exact>\n              <Following />\n            </Route>\n            <Route path='/export' exact>\n              <Export />\n            </Route>\n            <Route path='/post/:encodedCid' exact>\n              <Post />\n            </Route>\n          </Switch>\n        </Grid>\n        <Grid item className={classes.rightColumn}>\n          <ThemeSwitcher />\n          <TranslationSwitcher />\n        </Grid>\n      </Grid>\n      <BottomMenu className={classes.bottomMenu} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport reportWebVitals from './report-web-vitals'\nimport {HashRouter} from 'react-router-dom'\nimport FollowingProvider from 'src/hooks/following/following-provider'\nimport LanguageCodeProvider from 'src/translations/language-code-provider'\nimport ThemeProvider from 'src/themes/theme-provider'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider>\n      <LanguageCodeProvider>\n        <FollowingProvider>\n          <CssBaseline />\n          <App />\n        </FollowingProvider>\n      </LanguageCodeProvider>\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import assert from 'assert'\nimport WebSocketClient from 'socket.io-client'\nimport EventEmitter from 'events'\nimport crypto from 'libp2p-crypto'\nimport ipns from 'ipns'\nimport delay from 'delay'\nimport uint8ArrayToString from 'uint8arrays/to-string'\nimport PeerId from 'peer-id'\nimport isIpfs from 'is-ipfs'\nimport QuickLRU from 'quick-lru'\nimport config from 'src/config'\n\nclass IpnsClient extends EventEmitter {\n  constructor ({ipfs} = {}) {\n    super()\n    assert(ipfs && typeof ipfs === 'object')\n    this.ipfs = ipfs\n    this.privateKey = null\n    this.webSocketClient = null\n    this.peerCid = null\n    this.url = config.ipnsServer\n    this.subscriptionIpnsValueCache = new QuickLRU({maxSize: 10000})\n\n    this.start()\n  }\n\n  async start () {\n    assert(this.webSocketClient === null)\n    this.webSocketClient = WebSocketClient(this.url)\n    const encryptedPrivateKeyString = await this.ipfs.key.export('self', 'password')\n    this.privateKey = await crypto.keys.import(encryptedPrivateKeyString, 'password')\n    this.peerCid = (await this.ipfs.id()).id\n\n    // subscribe to new publishes\n    this.webSocketClient.on('publish', async (ipnsPath, ipnsRecord) => {\n      const ipnsValue = await getIpnsValueFromIpnsRecord(ipnsPath, ipnsRecord)\n      this.subscriptionIpnsValueCache.set(ipnsPath, ipnsValue)\n      this.emit('publish', ipnsPath, ipnsValue)\n    })\n  }\n\n  async stop () {\n    await this.webSocketClient.close()\n    this.webSocketClient = null\n  }\n\n  isReady () {\n    return this.webSocketClient && this.privateKey\n  }\n\n  async waitForReady () {\n    if (this.isReady()) {\n      return\n    }\n    await delay(10)\n    await this.waitForReady()\n  }\n\n  async subscribe (ipnsPaths) {\n    validateIpnsPaths(ipnsPaths)\n    await this.waitForReady()\n\n    // cache ipns values to call ipnsClient.subscribe\n    // multiple times without wasting websocket calls\n    let allResultsAreCached = true\n    const cachedIpnsValues = []\n    for (const ipnsPath of ipnsPaths) {\n      const cachedIpnsValue = this.subscriptionIpnsValueCache.get(ipnsPath)\n      cachedIpnsValues.push(cachedIpnsValue)\n      if (!cachedIpnsValue) {\n        allResultsAreCached = false\n      }\n    }\n    // if all values are cached, it must necessarily mean\n    // all ipns paths are already subscribed to\n    if (allResultsAreCached) {\n      console.log('ipns.subscribe', {allResultsAreCached, ipnsPaths, cachedIpnsValues})\n      return cachedIpnsValues\n    }\n\n    const ipnsRecords = await new Promise((resolve) => this.webSocketClient.emit('subscribe', ipnsPaths, resolve))\n    const ipnsValues = await getIpnsValuesFromIpnsRecords(ipnsPaths, ipnsRecords)\n\n    // cache inital values received from subscribe\n    // future values are cached in webSocketClient.on('publish')\n    for (const i in ipnsPaths) {\n      this.subscriptionIpnsValueCache.set(ipnsPaths[i], ipnsValues[i])\n    }\n\n    console.log('ipns.subscribe', {allResultsAreCached, ipnsPaths, ipnsValues})\n    return ipnsValues\n  }\n\n  async getRecords (ipnsPaths) {\n    validateIpnsPaths(ipnsPaths)\n    await this.waitForReady()\n    const ipnsRecords = await new Promise((resolve) => this.webSocketClient.emit('resolve', ipnsPaths, resolve))\n    const unmarshalled = await getUnmarshalledIpnsRecords(ipnsPaths, ipnsRecords)\n    return unmarshalled\n  }\n\n  async unsubscribe (ipnsPaths) {\n    validateIpnsPaths(ipnsPaths)\n    await this.waitForReady()\n\n    // delete values from cache or resubscribing will\n    // never get new data\n    for (const ipnsPath of ipnsPaths) {\n      this.subscriptionIpnsValueCache.delete(ipnsPath)\n    }\n    await this.webSocketClient.emit('unsubscribe', ipnsPaths)\n  }\n\n  async publish ({value, sequence} = {}) {\n    assert(typeof value === 'string')\n    assert(typeof sequence === 'number')\n    await this.waitForReady()\n\n    // needs /ipfs/ prefix to ipfs.name.resolve correctly\n    if (!value.startsWith('/ipfs/')) {\n      value = `/ipfs/${value}`\n    }\n\n    const validity = 1000 * 60 * 60 * 24 * 365 * 10 // 10 years\n\n    const record = await ipns.create(this.privateKey, value, sequence, validity)\n    await ipns.embedPublicKey(this.privateKey.public, record) // required to verify marshalled record\n    const marshalledRecord = Buffer.from(ipns.marshal(record))\n\n    const ipnsPath = this.peerCid\n    await this.webSocketClient.emit('publish', ipnsPath, marshalledRecord)\n  }\n}\n\nconst validateIpnsPaths = (ipnsPaths) => {\n  assert(Array.isArray(ipnsPaths), `ipns paths '${ipnsPaths}' not an array`)\n  for (const ipnsPath of ipnsPaths) {\n    assert(typeof ipnsPath === 'string', `ipns paths '${ipnsPaths}' contains non string '${ipnsPath}'`)\n  }\n}\n\nconst getIpnsValuesFromIpnsRecords = async (ipnsPaths, ipnsRecords) => {\n  assert(Array.isArray(ipnsPaths))\n  assert(Array.isArray(ipnsRecords))\n\n  const ipnsValues = []\n\n  for (const i in ipnsPaths) {\n    // possible to receive null from ipns server if record is not set\n    if (ipnsRecords[i] === null) {\n      ipnsValues.push(null)\n      continue\n    }\n    ipnsValues.push(await getIpnsValueFromIpnsRecord(ipnsPaths[i], ipnsRecords[i]))\n  }\n\n  return ipnsValues\n}\n\nconst getIpnsValueFromIpnsRecord = async (ipnsPath, marshalledIpnsRecord) => {\n  assert(typeof ipnsPath === 'string')\n  marshalledIpnsRecord = new Uint8Array(marshalledIpnsRecord)\n\n  // validate ipns record is signed by embedded public key\n  const ipnsRecord = ipns.unmarshal(marshalledIpnsRecord)\n  const publicKey = ipns.extractPublicKey({}, ipnsRecord)\n  await ipns.validate(publicKey, ipnsRecord)\n\n  // validate ipns path is the embedded public key\n  // in case malicious user tries to submit old ipns record\n  const peerCid = await PeerId.createFromPubKey(publicKey.bytes)\n  assert(peerCid.equals(PeerId.createFromB58String(ipnsPath)))\n\n  const ipnsValue = uint8ArrayToString(ipnsRecord.value)\n  // validate value is a valid cid and nothing weird\n  assert(isIpfs.cid(ipnsValue.replace(/^\\/ipfs\\//, '')))\n  return ipnsValue\n}\n\nconst getUnmarshalledIpnsRecords = async (ipnsPaths, ipnsRecords) => {\n  assert(Array.isArray(ipnsPaths))\n  assert(Array.isArray(ipnsRecords))\n\n  const unmarshalled = []\n\n  for (const i in ipnsPaths) {\n    // possible to receive null from ipns server if record is not set\n    if (ipnsRecords[i] === null) {\n      unmarshalled.push(null)\n      continue\n    }\n    unmarshalled.push(await getUnmarshalledIpnsRecord(ipnsPaths[i], ipnsRecords[i]))\n  }\n\n  return unmarshalled\n}\n\nconst getUnmarshalledIpnsRecord = async (ipnsPath, marshalledIpnsRecord) => {\n  assert(typeof ipnsPath === 'string')\n  marshalledIpnsRecord = new Uint8Array(marshalledIpnsRecord)\n\n  // validate ipns record is signed by embedded public key\n  const ipnsRecord = ipns.unmarshal(marshalledIpnsRecord)\n  const publicKey = ipns.extractPublicKey({}, ipnsRecord)\n  await ipns.validate(publicKey, ipnsRecord)\n\n  // validate ipns path is the embedded public key\n  // in case malicious user tries to submit old ipns record\n  const peerCid = await PeerId.createFromPubKey(publicKey.bytes)\n  assert(peerCid.equals(PeerId.createFromB58String(ipnsPath)))\n\n  const ipnsValue = uint8ArrayToString(ipnsRecord.value)\n  // validate value is a valid cid and nothing weird\n  assert(isIpfs.cid(ipnsValue.replace(/^\\/ipfs\\//, '')))\n\n  return ipnsRecord\n}\n\nwindow.IpnsClient = (...args) => new IpnsClient(...args)\nwindow.ipns = ipns\n\nexport default (...args) => new IpnsClient(...args)\n"],"sourceRoot":""}